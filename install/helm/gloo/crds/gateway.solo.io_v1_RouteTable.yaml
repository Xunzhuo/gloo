# Code generated by solo-kit. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/hook: crd-install
  creationTimestamp: null
  name: routetables.gateway.solo.io
spec:
  group: gateway.solo.io
  names:
    kind: RouteTable
    listKind: RouteTableList
    plural: routetables
    shortNames:
    - rt
    singular: routetable
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The **RouteTable** is a child routing object for the Gloo Gateway.
          properties:
            routes:
              description: The list of routes for the route table
              items:
                description: A route specifies how to match a request and what action to take when the request is matched.
                properties:
                  delegate_action:
                    description: Delegate routing actions for the given matcher to one or more RouteTables.
                    properties:
                      name:
                        description: 'The name of the Route Table to delegate to. Deprecated: these fields have been added for backwards-compatibility. Please use the `ref` field. If `name` and/or `namespace` have been specified, Gloo will ignore `ref` and `selector`.'
                        type: string
                      namespace:
                        description: 'The namespace of the Route Table to delegate to. Deprecated: these fields have been added for backwards-compatibility. Please use the `ref` field. If `name` and/or `namespace` have been specified, Gloo will ignore `ref` and `selector`.'
                        type: string
                      ref:
                        description: Delegate to the Route Table resource with the given `name` and `namespace.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                      selector:
                        description: Delegate to the Route Tables that match the given selector.
                        properties:
                          expressions:
                            description: Expressions allow for more flexible Route Tables label matching, such as equality-based requirements, set-based requirements, or a combination of both. https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#equality-based-requirement
                            items:
                              properties:
                                key:
                                  description: Kubernetes label key, must conform to Kubernetes syntax requirements https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
                                  type: string
                                operator:
                                  description: The operator can only be in, notin, =, ==, !=, exists, ! (DoesNotExist), gt (GreaterThan), lt (LessThan).
                                  enum:
                                  - - Equals
                                    - DoubleEquals
                                    - NotEquals
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    - GreaterThan
                                    - LessThan
                                  type: string
                                values:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: array
                          labels:
                            additionalProperties:
                              type: string
                            description: Delegate to Route Tables whose labels match the ones specified here.
                            type: object
                          namespaces:
                            description: Delegate to Route Tables in these namespaces. If omitted, Gloo will only select Route Tables in the same namespace as the resource (Virtual Service or Route Table) that owns this selector. The reserved value "*" can be used to select Route Tables in all namespaces watched by Gloo.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  direct_response_action:
                    description: Return an arbitrary HTTP response directly, without proxying.
                    properties:
                      body:
                        description: Specifies the content of the response body. If this setting is omitted, no body is included in the generated response.
                        type: string
                      status:
                        description: Specifies the HTTP response status to be returned.
                        format: int32
                        type: integer
                    type: object
                  inheritable_matchers:
                    description: Whether this route as a child should inherit headers, methods, and query parameter matchers from the parent. Defaults to value of parent; for virtual services (no parent) defaults to false.
                    properties:
                      value:
                        description: The bool value.
                        type: boolean
                    type: object
                  inheritable_path_matchers:
                    description: Whether this route as a child should inherit path matchers (i.e., path itself, case-sensitive setting) from the parent. Defaults to value of parent; for virtual services (no parent) defaults to false.
                    properties:
                      value:
                        description: The bool value.
                        type: boolean
                    type: object
                  matchers:
                    description: Matchers contain parameters for matching requests (i.e., based on HTTP path, headers, etc.). If empty, the route will match all requests (i.e, a single "/" path prefix matcher). For delegated routes, any parent matcher must have a `prefix` path matcher.
                    items:
                      description: Parameters for matching routes to requests received by a Gloo-managed proxy
                      properties:
                        case_sensitive:
                          description: Indicates that prefix/path matching should be case sensitive. The default is true.
                          properties:
                            value:
                              description: The bool value.
                              type: boolean
                          type: object
                        exact:
                          description: If specified, the route is an exact path rule meaning that the path must exactly match the *:path* header once the query string is removed.
                          type: string
                        headers:
                          description: Specifies a set of headers that the route should match on. The router will check the request’s headers against all the specified headers in the route config. A match will happen if all the headers in the route are present in the request with the same values (or based on presence if the value field is not in the config).
                          items:
                            description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                            properties:
                              invert_match:
                                description: If set to true, the result of the match will be inverted. Defaults to false.
                                type: boolean
                              name:
                                description: Specifies the name of the header in the request.
                                type: string
                              regex:
                                description: Specifies whether the header value should be treated as regex or not.
                                type: boolean
                              value:
                                description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                type: string
                            type: object
                          type: array
                        methods:
                          description: HTTP Method/Verb(s) to match on. If none specified, the matcher will ignore the HTTP Method
                          items:
                            type: string
                          type: array
                        prefix:
                          description: If specified, the route is a prefix rule meaning that the prefix must match the beginning of the *:path* header.
                          type: string
                        query_parameters:
                          description: Specifies a set of URL query parameters on which the route should match. The router will check the query string from the *path* header against all the specified query parameters. If the number of specified query parameters is nonzero, they all must match the *path* header's query string for a match to occur.
                          items:
                            description: Query parameter matching treats the query string of a request's :path header as an ampersand-separated list of keys and/or key=value elements.
                            properties:
                              name:
                                description: Specifies the name of a key that must be present in the requested *path*'s query string.
                                type: string
                              regex:
                                description: Specifies whether the query parameter value is a regular expression. Defaults to false. The entire query parameter value (i.e., the part to the right of the equals sign in "key=value") must match the regex. E.g., the regex "\d+$" will match "123" but not "a123" or "123a".
                                type: boolean
                              value:
                                description: Specifies the value of the key. If the value is absent, a request that contains the key in its query string will match, whether the key appears with a value (e.g., "?debug=true") or not (e.g., "?debug")
                                type: string
                            type: object
                          type: array
                        regex:
                          description: If specified, the route is a regular expression rule meaning that the regex must match the *:path* header once the query string is removed. The entire path (without the query string) must match the regex. The rule will not match if only a sub-sequence of the *:path* header matches the regex. The regex grammar is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name provides a convenience for users to be able to refer to a route by name.
                    type: string
                  options:
                    description: Route Options extend the behavior of routes. Route options include configuration such as retries, rate limiting, and request/response transformation. RouteOption behavior will be inherited by delegated routes which do not specify their own `options`
                    properties:
                      auto_host_rewrite:
                        description: Enable/Disable auto host re-write. Indicates that the host header will be swapped with the hostname of the upstream host. This setting is only honored for upstreams that use DNS resolution (i.e., their generated Envoy cluster is of type STRICT_DNS or LOGICAL_DNS -- think aws, azure, or static upstreams with hostnames)
                        properties:
                          value:
                            description: The bool value.
                            type: boolean
                        type: object
                      buffer_per_route:
                        description: 'BufferPerRoute can be used to set the maximum request size that the filter will buffer before the connection manager will stop buffering and return a 413 response. Note: If you have not set a global config (at the gateway level), this override will not do anything by itself.'
                        properties:
                          buffer:
                            description: 'Override the global configuration of the buffer filter with this new config. Note: If you have not set a global config (at the gateway level), this override will not do anything by itself.'
                            properties:
                              max_request_bytes:
                                description: The maximum request size that the filter will buffer before the connection manager will stop buffering and return a 413 response.
                                properties:
                                  value:
                                    description: The uint32 value.
                                    format: int32
                                    type: integer
                                type: object
                            type: object
                          disabled:
                            description: Disable the buffer filter for this particular vhost or route.
                            type: boolean
                        type: object
                      cors:
                        description: Defines a CORS policy for the route If a CORS policy is also defined on the route's virtual host, the policies are merged.
                        properties:
                          allow_credentials:
                            description: Specifies whether the resource allows credentials.
                            type: boolean
                          allow_headers:
                            description: Specifies the content for the *access-control-allow-headers* header.
                            items:
                              type: string
                            type: array
                          allow_methods:
                            description: Specifies the content for the *access-control-allow-methods* header.
                            items:
                              type: string
                            type: array
                          allow_origin:
                            description: Specifies the origins that will be allowed to make CORS requests.
                            items:
                              type: string
                            type: array
                          allow_origin_regex:
                            description: Specifies regex patterns that match origins that will be allowed to make CORS requests.
                            items:
                              type: string
                            type: array
                          disable_for_route:
                            description: Optional, only applies to route-specific CORS Policies, defaults to false. If set, the CORS Policy (specified on the virtual host) will be disabled for this route.
                            type: boolean
                          expose_headers:
                            description: Specifies the content for the *access-control-expose-headers* header.
                            items:
                              type: string
                            type: array
                          max_age:
                            description: Specifies the content for the *access-control-max-age* header.
                            type: string
                        type: object
                      csrf:
                        description: Csrf can be used to set percent of requests for which the CSRF filter is enabled, enable shadow-only mode where policies will be evaluated and tracked, but not enforced and add additional source origins that will be allowed in addition to the destination origin. For more, see https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/csrf/v2/csrf.proto
                        properties:
                          additional_origins:
                            description: Specifies additional source origins that will be allowed in addition to the destination origin.
                            items:
                              description: 'Specifies the way to match a string. [#next-free-field: 7]'
                              properties:
                                exact:
                                  description: The input string must match exactly the string specified here.
                                  type: string
                                ignore_case:
                                  description: If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no effect for the safe_regex match. For example, the matcher *data* will match both input string *Data* and *data* if set to true.
                                  type: boolean
                                prefix:
                                  description: 'The input string must have the prefix specified here. Note: empty prefix is not allowed, please use regex instead.'
                                  type: string
                                safe_regex:
                                  description: The input string must match the regular expression specified here.
                                  properties:
                                    google_re2:
                                      description: Google's RE2 regex engine.
                                      properties:
                                        max_program_size:
                                          description: This field controls the RE2 "program size" which is a rough estimate of how complex a compiled regex is to evaluate. A regex that has a program size greater than the configured value will fail to compile. In this case, the configured max program size can be increased or the regex can be simplified. If not specified, the default is 100.
                                          properties:
                                            value:
                                              description: The uint32 value.
                                              format: int32
                                              type: integer
                                          type: object
                                      type: object
                                    regex:
                                      description: The regex match string. The string must be supported by the configured engine.
                                      type: string
                                  type: object
                                suffix:
                                  description: 'The input string must have the suffix specified here. Note: empty prefix is not allowed, please use regex instead.'
                                  type: string
                              type: object
                            type: array
                          filter_enabled:
                            description: Specifies the % of requests for which the CSRF filter is enabled.
                            properties:
                              default_value:
                                description: Default value if the runtime value's for the numerator/denominator keys are not available.
                                properties:
                                  denominator:
                                    description: Specifies the denominator. If the denominator specified is less than the numerator, the final fractional percentage is capped at 1 (100%).
                                    enum:
                                    - - HUNDRED
                                      - TEN_THOUSAND
                                      - MILLION
                                    type: string
                                  numerator:
                                    description: Specifies the numerator. Defaults to 0.
                                    format: int32
                                    type: integer
                                type: object
                              runtime_key:
                                description: Runtime key for a YAML representation of a FractionalPercent.
                                type: string
                            type: object
                          shadow_enabled:
                            description: Specifies that CSRF policies will be evaluated and tracked, but not enforced.
                            properties:
                              default_value:
                                description: Default value if the runtime value's for the numerator/denominator keys are not available.
                                properties:
                                  denominator:
                                    description: Specifies the denominator. If the denominator specified is less than the numerator, the final fractional percentage is capped at 1 (100%).
                                    enum:
                                    - - HUNDRED
                                      - TEN_THOUSAND
                                      - MILLION
                                    type: string
                                  numerator:
                                    description: Specifies the numerator. Defaults to 0.
                                    format: int32
                                    type: integer
                                type: object
                              runtime_key:
                                description: Runtime key for a YAML representation of a FractionalPercent.
                                type: string
                            type: object
                        type: object
                      dlp:
                        description: 'Enterprise-only: Config for data loss prevention'
                        properties:
                          actions:
                            description: List of data loss prevention actions to be applied. These actions will be applied in order, one at a time.
                            items:
                              description: A single action meant to mask sensitive data. The action type represents a set of pre configured actions, as well as the ability to create custom actions. These actions can also be shadowed, a shadowed action will be recorded in the statistics, and debug logs, but not actually committed in the response body.
                              properties:
                                action_type:
                                  description: The action type to implement.
                                  enum:
                                  - - CUSTOM
                                    - SSN
                                    - MASTERCARD
                                    - VISA
                                    - AMEX
                                    - DISCOVER
                                    - JCB
                                    - DINERS_CLUB
                                    - CREDIT_CARD_TRACKERS
                                    - ALL_CREDIT_CARDS
                                  type: string
                                custom_action:
                                  description: The custom user action to be applied. This field will only be used if the custom action type is specified above.
                                  properties:
                                    mask_char:
                                      description: 'The masking character for the sensitive data. default value: X'
                                      type: string
                                    name:
                                      description: The name of the custom action. This name is used for logging and debugging purposes.
                                      type: string
                                    percent:
                                      description: 'The percent of the string which will be masked by the mask_char default value: 75% rounds ratio (percent/100) by std::round http://www.cplusplus.com/reference/cmath/round/'
                                      properties:
                                        value:
                                          type: number
                                      type: object
                                    regex:
                                      description: The list of regex strings which will be applied in order.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                shadow:
                                  description: Shadow represents whether the action should be taken, or just recorded.
                                  type: boolean
                              type: object
                            type: array
                          enabled_for:
                            description: Whether responses, access logs, or both should be masked by the applied actions. If not defined, masking will only be enabled for responses bodies.
                            enum:
                            - - RESPONSE_BODY
                              - ACCESS_LOGS
                              - ALL
                            type: string
                        type: object
                      envoy_metadata:
                        additionalProperties:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        description: This field can be used to provide additional information about the route. This metadata can be consumed by the Envoy filters that process requests that match the route. For more info about metadata, see [here](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/data_sharing_between_filters#metadata).
                        type: object
                      extauth:
                        description: 'Enterprise-only: Authentication configuration'
                        properties:
                          config_ref:
                            description: A reference to an AuthConfig. This is used to configure the Gloo Edge Enterprise extauth server.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                          custom_auth:
                            description: Use this field if you are running your own custom extauth server.
                            properties:
                              context_extensions:
                                additionalProperties:
                                  type: string
                                description: When a request matches the virtual host, route, or weighted destination on which this configuration is defined, Gloo will add the given context_extensions to the request that is sent to the external authorization server. This allows the server to base the auth decision on metadata that you define on the source of the request.
                                type: object
                            type: object
                          disable:
                            description: Set to true to disable auth on the virtual host/route.
                            type: boolean
                        type: object
                      extensions:
                        description: Extensions will be passed along from Listeners, Gateways, VirtualServices, Routes, and Route tables to the underlying Proxy, making them useful for controllers, validation tools, etc. which interact with kubernetes yaml.
                        properties:
                          configs:
                            additionalProperties:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: object
                        type: object
                      faults:
                        properties:
                          abort:
                            properties:
                              http_status:
                                description: This should be a standard HTTP status, i.e. 503. Defaults to 0.
                                format: int32
                                type: integer
                              percentage:
                                description: Percentage of requests that should be aborted, defaulting to 0. This should be a value between 0.0 and 100.0, with up to 6 significant digits.
                                type: number
                            type: object
                          delay:
                            properties:
                              fixed_delay:
                                description: Fixed delay, defaulting to 0.
                                properties:
                                  nanos:
                                    description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                    format: int32
                                    type: integer
                                  seconds:
                                    description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                    format: int64
                                    type: integer
                                type: object
                              percentage:
                                description: Percentage of requests that should be delayed, defaulting to 0. This should be a value between 0.0 and 100.0, with up to 6 significant digits.
                                type: number
                            type: object
                        type: object
                      header_manipulation:
                        description: Append/Remove headers on Requests or Responses on this Route
                        properties:
                          request_headers_to_add:
                            description: Specifies a list of HTTP headers that should be added to each request handled by this route or virtual host. For more information, including details on header value syntax, see the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers) .
                            items:
                              description: Header name/value pair plus option to control append behavior.
                              properties:
                                append:
                                  description: Should the value be appended? If true (default), the value is appended to existing values.
                                  properties:
                                    value:
                                      description: The bool value.
                                      type: boolean
                                  type: object
                                header:
                                  description: Explicitly specified header
                                  properties:
                                    key:
                                      description: Header name.
                                      type: string
                                    value:
                                      description: Header value.
                                      type: string
                                  type: object
                                header_secret_ref:
                                  description: Reference to header contained in a secret
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          request_headers_to_remove:
                            description: Specifies a list of HTTP headers that should be removed from each request handled by this route or virtual host.
                            items:
                              type: string
                            type: array
                          response_headers_to_add:
                            description: Specifies a list of HTTP headers that should be added to each response handled by this route or host. For more information, including details on header value syntax, see the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers) .
                            items:
                              description: Header name/value pair plus option to control append behavior.
                              properties:
                                append:
                                  description: Should the value be appended? If true (default), the value is appended to existing values.
                                  properties:
                                    value:
                                      description: The bool value.
                                      type: boolean
                                  type: object
                                header:
                                  description: Header name/value pair that this option applies to.
                                  properties:
                                    key:
                                      description: Header name.
                                      type: string
                                    value:
                                      description: Header value.
                                      type: string
                                  type: object
                              type: object
                            type: array
                          response_headers_to_remove:
                            description: Specifies a list of HTTP headers that should be removed from each response handled by this route or virtual host.
                            items:
                              type: string
                            type: array
                        type: object
                      host_rewrite:
                        description: Indicates that during forwarding, the host header will be swapped with this value.
                        type: string
                      jwt:
                        description: 'Enterprise-only: Config for reading and verifying JWTs. Copy verifiable information from JWTs into other headers to make routing decisions or combine with RBAC for fine-grained access control. This has been deprecated in favor of staged jwt. The same configuration can be achieved through staged jwt using AfterExtAuth.'
                        properties:
                          disable:
                            description: Disable JWT checks on this route.
                            type: boolean
                        type: object
                      jwt_staged:
                        description: 'Enterprise-only: Config for reading and verifying JWTs. Copy verifiable information from JWTs into other headers to make routing decisions or combine with RBAC for fine-grained access control. JWT configuration has stages "BeforeExtAuth" and "AfterExtAuth". BeforeExtAuth JWT validation runs before the external authentication service. This is useful when JWT is used in conjunction with other auth mechanisms specified in the [boolean expression Extauth API](https://docs.solo.io/gloo-edge/latest/reference/api/github.com/solo-io/gloo/projects/gloo/api/v1/enterprise/options/extauth/v1/extauth.proto.sk/#authconfig). AfterExtAuth validation runs after external authentication service, which is useful for verifying JWTs obtained during extauth (e.g. oauth/oidc)'
                        properties:
                          after_ext_auth:
                            description: JWT route config for the JWT filter that runs after the extauth filter.
                            properties:
                              disable:
                                description: Disable JWT checks on this route.
                                type: boolean
                            type: object
                          before_ext_auth:
                            description: JWT route config for the JWT filter that runs after the extauth filter.
                            properties:
                              disable:
                                description: Disable JWT checks on this route.
                                type: boolean
                            type: object
                        type: object
                      lb_hash:
                        description: 'For routes served by a hashing load balancer, this defines the input to the hash key Gloo configures Envoy with the first available RouteActionHashConfig among the following ordered list of providers: - route, upstream, virtual service'
                        properties:
                          hash_policies:
                            description: The list of policies Envoy will use when generating a hash key for a hashing load balancer
                            items:
                              description: Specifies an element of Envoy's hashing policy for hashing load balancers
                              properties:
                                cookie:
                                  description: Use a given cookie as a component of the hashing load balancer's hash key
                                  properties:
                                    name:
                                      description: required, the name of the cookie to be used to obtain the hash key
                                      type: string
                                    path:
                                      description: The name of the path for the cookie. If no path is specified here, no path will be set for the cookie.
                                      type: string
                                    ttl:
                                      description: If specified, a cookie with the TTL will be generated if the cookie is not present. If the TTL is present and zero, the generated cookie will be a session cookie.
                                      properties:
                                        nanos:
                                          description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                          format: int32
                                          type: integer
                                        seconds:
                                          description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                          format: int64
                                          type: integer
                                      type: object
                                  type: object
                                header:
                                  description: Use a given header's value as a component of the hashing load balancer's hash key
                                  type: string
                                source_ip:
                                  description: Use the request's source IP address as a component of the hashing load balancer's hash key
                                  type: boolean
                                terminal:
                                  description: If set, and a hash key is available after evaluating this policy, Envoy will skip the subsequent policies and use the key as it is. This is useful for defining "fallback" policies and limiting the time Envoy spends generating hash keys.
                                  type: boolean
                              type: object
                            type: array
                        type: object
                      prefix_rewrite:
                        description: For requests matched on this route, rewrite the HTTP request path to the provided value before forwarding upstream
                        properties:
                          value:
                            description: The string value.
                            type: string
                        type: object
                      rate_limit_configs:
                        description: References to RateLimitConfig resources. This is used to configure the GlooE rate limit server. Only one of `ratelimit` or `rate_limit_configs` can be set.
                        properties:
                          refs:
                            items:
                              description: A reference to a `RateLimitConfig` resource.
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            type: array
                        type: object
                      ratelimit:
                        description: 'Enterprise-only: Partial config for GlooE rate-limiting based on Envoy''s rate-limit service; supports Envoy''s rate-limit service API. (reference here: https://github.com/lyft/ratelimit#configuration) Configure rate-limit *actions* here, which define how request characteristics get translated into descriptors used by the rate-limit service for rate-limiting. Configure rate-limit *descriptors* and their associated limits on the Gloo settings. Only one of `ratelimit` or `rate_limit_configs` can be set.'
                        properties:
                          include_vh_rate_limits:
                            description: Whether or not to include rate limits as defined on the VirtualHost in addition to rate limits on the Route.
                            type: boolean
                          rate_limits:
                            description: Define individual rate limits here. Each rate limit will be evaluated, if any rate limit would be throttled, the entire request returns a 429 (gets throttled)
                            items:
                              description: 'Each action and setAction in the lists maps part of the request (or its context) to a descriptor. The tuple or set of descriptors generated by the provided actions is sent to the rate limit server and matched against rate limit rules. Order matters on provided actions but not on setActions, e.g. the following actions: - actions: - requestHeaders: descriptorKey: account_id headerName: x-account-id - requestHeaders: descriptorKey: plan headerName: x-plan define an ordered descriptor tuple like so: (''account_id'', ''<x-account-id value>''), (''plan'', ''<x-plan value>'')'
                              properties:
                                actions:
                                  items:
                                    description: Copied directly from envoy https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit-action
                                    properties:
                                      destination_cluster:
                                        description: Rate limit on destination cluster.
                                        type: object
                                      generic_key:
                                        description: Rate limit on a generic key.
                                        properties:
                                          descriptor_value:
                                            description: The value to use in the descriptor entry.
                                            type: string
                                        type: object
                                      header_value_match:
                                        description: Rate limit on the existence of request headers.
                                        properties:
                                          descriptor_value:
                                            description: The value to use in the descriptor entry.
                                            type: string
                                          expect_match:
                                            description: If set to true, the action will append a descriptor entry when the request matches the headers. If set to false, the action will append a descriptor entry when the request does not match the headers. The default value is true.
                                            properties:
                                              value:
                                                description: The bool value.
                                                type: boolean
                                            type: object
                                          headers:
                                            description: Specifies a set of headers that the rate limit action should match on. The action will check the request’s headers against all the specified headers in the config. A match will happen if all the headers in the config are present in the request with the same values (or based on presence if the value field is not in the config).
                                            items:
                                              properties:
                                                exact_match:
                                                  description: If specified, header match will be performed based on the value of the header.
                                                  type: string
                                                invert_match:
                                                  description: If specified, the match result will be inverted before checking. Defaults to false.
                                                  type: boolean
                                                name:
                                                  description: Specifies the name of the header in the request.
                                                  type: string
                                                prefix_match:
                                                  description: 'If specified, header match will be performed based on the prefix of the header value. Note: empty prefix is not allowed, please use present_match instead.'
                                                  type: string
                                                present_match:
                                                  description: If specified, header match will be performed based on whether the header is in the request.
                                                  type: boolean
                                                range_match:
                                                  description: 'If specified, header match will be performed based on range. The rule will match if the request header value is within this range. The entire request header value must represent an integer in base 10 notation: consisting of an optional plus or minus sign followed by a sequence of digits. The rule will not match if the header value does not represent an integer. Match will fail for empty values, floating point numbers or if only a subsequence of the header value is an integer.'
                                                  properties:
                                                    end:
                                                      description: end of the range (exclusive)
                                                      format: int64
                                                      type: integer
                                                    start:
                                                      description: start of the range (inclusive)
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                regex_match:
                                                  description: If specified, this regex string is a regular expression rule which implies the entire request header value must match the regex. The rule will not match if only a subsequence of the request header value matches the regex. The regex grammar used in the value field is defined `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.
                                                  type: string
                                                suffix_match:
                                                  description: 'If specified, header match will be performed based on the suffix of the header value. Note: empty suffix is not allowed, please use present_match instead.'
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      metadata:
                                        description: Rate limit on metadata.
                                        properties:
                                          default_value:
                                            description: An optional value to use if *metadata_key* is empty. If not set and no value is present under the metadata_key then no descriptor is generated.
                                            type: string
                                          descriptor_key:
                                            description: Required. The key to use in the descriptor entry.
                                            type: string
                                          metadata_key:
                                            description: Required. Metadata struct that defines the key and path to retrieve the string value. A match will only happen if the value in the metadata is of type string.
                                            properties:
                                              key:
                                                description: Required. The key name of Metadata to retrieve the Struct from the metadata. Typically, it represents a builtin subsystem or custom extension.
                                                type: string
                                              path:
                                                description: Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path, e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example, which depends on the particular scenario.
                                                items:
                                                  description: Specifies the segment in a path to retrieve value from Metadata. Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
                                                  properties:
                                                    key:
                                                      description: Required. If specified, use the key to retrieve the value in a Struct.
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          source:
                                            description: Source of metadata
                                            enum:
                                            - - DYNAMIC
                                              - ROUTE_ENTRY
                                            type: string
                                        type: object
                                      remote_address:
                                        description: Rate limit on remote address.
                                        type: object
                                      request_headers:
                                        description: Rate limit on request headers.
                                        properties:
                                          descriptor_key:
                                            description: The key to use in the descriptor entry.
                                            type: string
                                          header_name:
                                            description: The header name to be queried from the request headers. The header’s value is used to populate the value of the descriptor entry for the descriptor_key.
                                            type: string
                                        type: object
                                      source_cluster:
                                        description: Rate limit on source cluster.
                                        type: object
                                    type: object
                                  type: array
                                set_actions:
                                  items:
                                    description: Copied directly from envoy https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit-action
                                    properties:
                                      destination_cluster:
                                        description: Rate limit on destination cluster.
                                        type: object
                                      generic_key:
                                        description: Rate limit on a generic key.
                                        properties:
                                          descriptor_value:
                                            description: The value to use in the descriptor entry.
                                            type: string
                                        type: object
                                      header_value_match:
                                        description: Rate limit on the existence of request headers.
                                        properties:
                                          descriptor_value:
                                            description: The value to use in the descriptor entry.
                                            type: string
                                          expect_match:
                                            description: If set to true, the action will append a descriptor entry when the request matches the headers. If set to false, the action will append a descriptor entry when the request does not match the headers. The default value is true.
                                            properties:
                                              value:
                                                description: The bool value.
                                                type: boolean
                                            type: object
                                          headers:
                                            description: Specifies a set of headers that the rate limit action should match on. The action will check the request’s headers against all the specified headers in the config. A match will happen if all the headers in the config are present in the request with the same values (or based on presence if the value field is not in the config).
                                            items:
                                              properties:
                                                exact_match:
                                                  description: If specified, header match will be performed based on the value of the header.
                                                  type: string
                                                invert_match:
                                                  description: If specified, the match result will be inverted before checking. Defaults to false.
                                                  type: boolean
                                                name:
                                                  description: Specifies the name of the header in the request.
                                                  type: string
                                                prefix_match:
                                                  description: 'If specified, header match will be performed based on the prefix of the header value. Note: empty prefix is not allowed, please use present_match instead.'
                                                  type: string
                                                present_match:
                                                  description: If specified, header match will be performed based on whether the header is in the request.
                                                  type: boolean
                                                range_match:
                                                  description: 'If specified, header match will be performed based on range. The rule will match if the request header value is within this range. The entire request header value must represent an integer in base 10 notation: consisting of an optional plus or minus sign followed by a sequence of digits. The rule will not match if the header value does not represent an integer. Match will fail for empty values, floating point numbers or if only a subsequence of the header value is an integer.'
                                                  properties:
                                                    end:
                                                      description: end of the range (exclusive)
                                                      format: int64
                                                      type: integer
                                                    start:
                                                      description: start of the range (inclusive)
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                regex_match:
                                                  description: If specified, this regex string is a regular expression rule which implies the entire request header value must match the regex. The rule will not match if only a subsequence of the request header value matches the regex. The regex grammar used in the value field is defined `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.
                                                  type: string
                                                suffix_match:
                                                  description: 'If specified, header match will be performed based on the suffix of the header value. Note: empty suffix is not allowed, please use present_match instead.'
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      metadata:
                                        description: Rate limit on metadata.
                                        properties:
                                          default_value:
                                            description: An optional value to use if *metadata_key* is empty. If not set and no value is present under the metadata_key then no descriptor is generated.
                                            type: string
                                          descriptor_key:
                                            description: Required. The key to use in the descriptor entry.
                                            type: string
                                          metadata_key:
                                            description: Required. Metadata struct that defines the key and path to retrieve the string value. A match will only happen if the value in the metadata is of type string.
                                            properties:
                                              key:
                                                description: Required. The key name of Metadata to retrieve the Struct from the metadata. Typically, it represents a builtin subsystem or custom extension.
                                                type: string
                                              path:
                                                description: Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path, e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example, which depends on the particular scenario.
                                                items:
                                                  description: Specifies the segment in a path to retrieve value from Metadata. Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
                                                  properties:
                                                    key:
                                                      description: Required. If specified, use the key to retrieve the value in a Struct.
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          source:
                                            description: Source of metadata
                                            enum:
                                            - - DYNAMIC
                                              - ROUTE_ENTRY
                                            type: string
                                        type: object
                                      remote_address:
                                        description: Rate limit on remote address.
                                        type: object
                                      request_headers:
                                        description: Rate limit on request headers.
                                        properties:
                                          descriptor_key:
                                            description: The key to use in the descriptor entry.
                                            type: string
                                          header_name:
                                            description: The header name to be queried from the request headers. The header’s value is used to populate the value of the descriptor entry for the descriptor_key.
                                            type: string
                                        type: object
                                      source_cluster:
                                        description: Rate limit on source cluster.
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            type: array
                        type: object
                      ratelimit_basic:
                        description: 'Enterprise-only: Config for GlooE rate-limiting using simplified (gloo-specific) API'
                        properties:
                          anonymous_limits:
                            properties:
                              requests_per_unit:
                                format: int32
                                type: integer
                              unit:
                                enum:
                                - - UNKNOWN
                                  - SECOND
                                  - MINUTE
                                  - HOUR
                                  - DAY
                                type: string
                            type: object
                          authorized_limits:
                            properties:
                              requests_per_unit:
                                format: int32
                                type: integer
                              unit:
                                enum:
                                - - UNKNOWN
                                  - SECOND
                                  - MINUTE
                                  - HOUR
                                  - DAY
                                type: string
                            type: object
                        type: object
                      rbac:
                        description: 'Enterprise-only: Config for RBAC (currently only supports RBAC based on JWT claims)'
                        properties:
                          disable:
                            description: Disable RBAC checks on this resource (default false). This is useful to allow access to static resources/login page without RBAC checks. If provided on a route, all route settings override any vhost settings
                            type: boolean
                          policies:
                            additionalProperties:
                              properties:
                                permissions:
                                  description: Permissions granted to the principals.
                                  properties:
                                    methods:
                                      description: What http methods (GET, POST, ...) are allowed.
                                      items:
                                        type: string
                                      type: array
                                    path_prefix:
                                      description: Paths that have this prefix will be allowed.
                                      type: string
                                  type: object
                                principals:
                                  description: Principals in this policy.
                                  items:
                                    description: An RBAC principal - the identity entity (usually a user or a service account).
                                    properties:
                                      jwt_principal:
                                        properties:
                                          claims:
                                            additionalProperties:
                                              type: string
                                            description: Set of claims that make up this principal. Commonly, the 'iss' and 'sub' or 'email' claims are used. all claims must be present on the JWT.
                                            type: object
                                          provider:
                                            description: Verify that the JWT came from a specific provider. This usually can be left empty and a provider will be chosen automatically.
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            description: Named policies to apply.
                            type: object
                        type: object
                      regex_rewrite:
                        description: For requests matched on this route, rewrite the HTTP request path according to the provided regex pattern before forwarding upstream Please refer to the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/v1.14.1/api-v3/config/route/v3/route_components.proto#envoy-v3-api-field-config-route-v3-routeaction-regex-rewrite) for more details about the `regex_rewrite` attribute
                        properties:
                          pattern:
                            description: The regular expression used to find portions of a string (hereafter called the "subject string") that should be replaced. When a new string is produced during the substitution operation, the new string is initially the same as the subject string, but then all matches in the subject string are replaced by the substitution string. If replacing all matches isn't desired, regular expression anchors can be used to ensure a single match, so as to replace just one occurrence of a pattern. Capture groups can be used in the pattern to extract portions of the subject string, and then referenced in the substitution string.
                            properties:
                              google_re2:
                                description: Google's RE2 regex engine.
                                properties:
                                  max_program_size:
                                    description: This field controls the RE2 "program size" which is a rough estimate of how complex a compiled regex is to evaluate. A regex that has a program size greater than the configured value will fail to compile. In this case, the configured max program size can be increased or the regex can be simplified. If not specified, the default is 100.
                                    properties:
                                      value:
                                        description: The uint32 value.
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              regex:
                                description: The regex match string. The string must be supported by the configured engine.
                                type: string
                            type: object
                          substitution:
                            description: The string that should be substituted into matching portions of the subject string during a substitution operation to produce a new string. Capture groups in the pattern can be referenced in the substitution string. Note, however, that the syntax for referring to capture groups is defined by the chosen regular expression engine. Google's `RE2 <https://github.com/google/re2>`_ regular expression engine uses a backslash followed by the capture group number to denote a numbered capture group. E.g., ``\1`` refers to capture group 1, and ``\2`` refers to capture group 2.
                            type: string
                        type: object
                      retries:
                        properties:
                          num_retries:
                            description: Specifies the allowed number of retries. This parameter is optional and defaults to 1. These are the same conditions [documented for Envoy](https://www.envoyproxy.io/docs/envoy/v1.14.1/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-retry-on)
                            format: int32
                            type: integer
                          per_try_timeout:
                            description: Specifies a non-zero upstream timeout per retry attempt. This parameter is optional.
                            properties:
                              nanos:
                                description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                                format: int32
                                type: integer
                              seconds:
                                description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                format: int64
                                type: integer
                            type: object
                          retry_on:
                            description: Specifies the conditions under which retry takes place. These are the same conditions [documented for Envoy](https://www.envoyproxy.io/docs/envoy/v1.14.1/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-retry-on)
                            type: string
                        type: object
                      shadowing:
                        description: 'Specifies traffic shadowing configuration for the route. See here for additional information on Envoy''s shadowing capabilities: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route.proto#envoy-api-msg-route-routeaction-requestmirrorpolicy'
                        properties:
                          percentage:
                            description: This should be a value between 0.0 and 100.0, with up to 6 significant digits.
                            type: number
                          upstream:
                            description: The upstream to which the shadowed traffic should be sent.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                        type: object
                      staged_transformations:
                        description: Early transformations stage. These transformations run before most other options are processed. If the `regular` field is set in here, the `transformations` field is ignored.
                        properties:
                          early:
                            description: Early transformations happen before most other options (Like Auth and Rate Limit).
                            properties:
                              request_transforms:
                                description: Transformations to apply on the request. The first request that matches will apply.
                                items:
                                  properties:
                                    clear_route_cache:
                                      description: Should we clear the route cache if a transformation was matched.
                                      type: boolean
                                    matcher:
                                      description: Matches on the request properties.
                                      properties:
                                        case_sensitive:
                                          description: Indicates that prefix/path matching should be case sensitive. The default is true.
                                          properties:
                                            value:
                                              description: The bool value.
                                              type: boolean
                                          type: object
                                        exact:
                                          description: If specified, the route is an exact path rule meaning that the path must exactly match the *:path* header once the query string is removed.
                                          type: string
                                        headers:
                                          description: Specifies a set of headers that the route should match on. The router will check the request’s headers against all the specified headers in the route config. A match will happen if all the headers in the route are present in the request with the same values (or based on presence if the value field is not in the config).
                                          items:
                                            description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                                            properties:
                                              invert_match:
                                                description: If set to true, the result of the match will be inverted. Defaults to false.
                                                type: boolean
                                              name:
                                                description: Specifies the name of the header in the request.
                                                type: string
                                              regex:
                                                description: Specifies whether the header value should be treated as regex or not.
                                                type: boolean
                                              value:
                                                description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                                type: string
                                            type: object
                                          type: array
                                        methods:
                                          description: HTTP Method/Verb(s) to match on. If none specified, the matcher will ignore the HTTP Method
                                          items:
                                            type: string
                                          type: array
                                        prefix:
                                          description: If specified, the route is a prefix rule meaning that the prefix must match the beginning of the *:path* header.
                                          type: string
                                        query_parameters:
                                          description: Specifies a set of URL query parameters on which the route should match. The router will check the query string from the *path* header against all the specified query parameters. If the number of specified query parameters is nonzero, they all must match the *path* header's query string for a match to occur.
                                          items:
                                            description: Query parameter matching treats the query string of a request's :path header as an ampersand-separated list of keys and/or key=value elements.
                                            properties:
                                              name:
                                                description: Specifies the name of a key that must be present in the requested *path*'s query string.
                                                type: string
                                              regex:
                                                description: Specifies whether the query parameter value is a regular expression. Defaults to false. The entire query parameter value (i.e., the part to the right of the equals sign in "key=value") must match the regex. E.g., the regex "\d+$" will match "123" but not "a123" or "123a".
                                                type: boolean
                                              value:
                                                description: Specifies the value of the key. If the value is absent, a request that contains the key in its query string will match, whether the key appears with a value (e.g., "?debug=true") or not (e.g., "?debug")
                                                type: string
                                            type: object
                                          type: array
                                        regex:
                                          description: If specified, the route is a regular expression rule meaning that the regex must match the *:path* header once the query string is removed. The entire path (without the query string) must match the regex. The rule will not match if only a sub-sequence of the *:path* header matches the regex. The regex grammar is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                                          type: string
                                      type: object
                                    request_transformation:
                                      description: Transformation to apply on the request.
                                      properties:
                                        header_body_transform:
                                          description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                          type: object
                                        transformation_template:
                                          description: Apply transformation templates.
                                          properties:
                                            advanced_templates:
                                              description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamic_metadata_values:
                                              description: Use this field to set Dynamic Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadata_namespace:
                                                    description: The metadata namespace. Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information from the request/response body
                                                    type: object
                                                  header:
                                                    description: Extract information from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                              type: object
                                            headers_to_append:
                                              description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                              items:
                                                description: Defines a header-template pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignore_error_on_parse:
                                              description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                              type: boolean
                                            merge_extractors_to_body:
                                              description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                              type: object
                                            parse_body_behavior:
                                              enum:
                                              - - ParseAsJson
                                                - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                              type: object
                                          type: object
                                        xslt_transformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            non_xml_transform:
                                              description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                              type: boolean
                                            set_content_type:
                                              description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                              type: string
                                          type: object
                                      type: object
                                    response_transformation:
                                      description: Transformation to apply on the response.
                                      properties:
                                        header_body_transform:
                                          description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                          type: object
                                        transformation_template:
                                          description: Apply transformation templates.
                                          properties:
                                            advanced_templates:
                                              description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamic_metadata_values:
                                              description: Use this field to set Dynamic Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadata_namespace:
                                                    description: The metadata namespace. Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information from the request/response body
                                                    type: object
                                                  header:
                                                    description: Extract information from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                              type: object
                                            headers_to_append:
                                              description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                              items:
                                                description: Defines a header-template pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignore_error_on_parse:
                                              description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                              type: boolean
                                            merge_extractors_to_body:
                                              description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                              type: object
                                            parse_body_behavior:
                                              enum:
                                              - - ParseAsJson
                                                - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                              type: object
                                          type: object
                                        xslt_transformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            non_xml_transform:
                                              description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                              type: boolean
                                            set_content_type:
                                              description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                              response_transforms:
                                description: Transformations to apply on the response. This field is only consulted if there is no response transformation in the matched `request_transforms`. i.e. Only one response transformation will be executed. The first response transformation that matches will apply.
                                items:
                                  properties:
                                    matchers:
                                      description: Response headers to match on.
                                      items:
                                        description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                                        properties:
                                          invert_match:
                                            description: If set to true, the result of the match will be inverted. Defaults to false.
                                            type: boolean
                                          name:
                                            description: Specifies the name of the header in the request.
                                            type: string
                                          regex:
                                            description: Specifies whether the header value should be treated as regex or not.
                                            type: boolean
                                          value:
                                            description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                            type: string
                                        type: object
                                      type: array
                                    response_code_details:
                                      description: Response code detail to match on. To see the response code details for your usecase, you can use the envoy access log %RESPONSE_CODE_DETAILS% formatter to log it.
                                      type: string
                                    response_transformation:
                                      description: Transformation to apply on the response.
                                      properties:
                                        header_body_transform:
                                          description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                          type: object
                                        transformation_template:
                                          description: Apply transformation templates.
                                          properties:
                                            advanced_templates:
                                              description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamic_metadata_values:
                                              description: Use this field to set Dynamic Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadata_namespace:
                                                    description: The metadata namespace. Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information from the request/response body
                                                    type: object
                                                  header:
                                                    description: Extract information from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                              type: object
                                            headers_to_append:
                                              description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                              items:
                                                description: Defines a header-template pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignore_error_on_parse:
                                              description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                              type: boolean
                                            merge_extractors_to_body:
                                              description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                              type: object
                                            parse_body_behavior:
                                              enum:
                                              - - ParseAsJson
                                                - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                              type: object
                                          type: object
                                        xslt_transformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            non_xml_transform:
                                              description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                              type: boolean
                                            set_content_type:
                                              description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          inherit_transformation:
                            description: Inherit transformation config from parent. This has no affect on VirtualHost level transformations. If a RouteTable or Route wants to inherit transformations from it's parent RouteTable or VirtualHost, this should be set to true, else transformations from parents will not be inherited. Transformations are ordered so the child's transformation gets priority, so in the case where a child and parent's transformation matchers are the same, only the child's transformation will run because only one transformation will run per stage. Defaults to false.
                            type: boolean
                          regular:
                            description: Regular transformations happen after Auth and Rate limit decisions has been made.
                            properties:
                              request_transforms:
                                description: Transformations to apply on the request. The first request that matches will apply.
                                items:
                                  properties:
                                    clear_route_cache:
                                      description: Should we clear the route cache if a transformation was matched.
                                      type: boolean
                                    matcher:
                                      description: Matches on the request properties.
                                      properties:
                                        case_sensitive:
                                          description: Indicates that prefix/path matching should be case sensitive. The default is true.
                                          properties:
                                            value:
                                              description: The bool value.
                                              type: boolean
                                          type: object
                                        exact:
                                          description: If specified, the route is an exact path rule meaning that the path must exactly match the *:path* header once the query string is removed.
                                          type: string
                                        headers:
                                          description: Specifies a set of headers that the route should match on. The router will check the request’s headers against all the specified headers in the route config. A match will happen if all the headers in the route are present in the request with the same values (or based on presence if the value field is not in the config).
                                          items:
                                            description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                                            properties:
                                              invert_match:
                                                description: If set to true, the result of the match will be inverted. Defaults to false.
                                                type: boolean
                                              name:
                                                description: Specifies the name of the header in the request.
                                                type: string
                                              regex:
                                                description: Specifies whether the header value should be treated as regex or not.
                                                type: boolean
                                              value:
                                                description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                                type: string
                                            type: object
                                          type: array
                                        methods:
                                          description: HTTP Method/Verb(s) to match on. If none specified, the matcher will ignore the HTTP Method
                                          items:
                                            type: string
                                          type: array
                                        prefix:
                                          description: If specified, the route is a prefix rule meaning that the prefix must match the beginning of the *:path* header.
                                          type: string
                                        query_parameters:
                                          description: Specifies a set of URL query parameters on which the route should match. The router will check the query string from the *path* header against all the specified query parameters. If the number of specified query parameters is nonzero, they all must match the *path* header's query string for a match to occur.
                                          items:
                                            description: Query parameter matching treats the query string of a request's :path header as an ampersand-separated list of keys and/or key=value elements.
                                            properties:
                                              name:
                                                description: Specifies the name of a key that must be present in the requested *path*'s query string.
                                                type: string
                                              regex:
                                                description: Specifies whether the query parameter value is a regular expression. Defaults to false. The entire query parameter value (i.e., the part to the right of the equals sign in "key=value") must match the regex. E.g., the regex "\d+$" will match "123" but not "a123" or "123a".
                                                type: boolean
                                              value:
                                                description: Specifies the value of the key. If the value is absent, a request that contains the key in its query string will match, whether the key appears with a value (e.g., "?debug=true") or not (e.g., "?debug")
                                                type: string
                                            type: object
                                          type: array
                                        regex:
                                          description: If specified, the route is a regular expression rule meaning that the regex must match the *:path* header once the query string is removed. The entire path (without the query string) must match the regex. The rule will not match if only a sub-sequence of the *:path* header matches the regex. The regex grammar is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                                          type: string
                                      type: object
                                    request_transformation:
                                      description: Transformation to apply on the request.
                                      properties:
                                        header_body_transform:
                                          description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                          type: object
                                        transformation_template:
                                          description: Apply transformation templates.
                                          properties:
                                            advanced_templates:
                                              description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamic_metadata_values:
                                              description: Use this field to set Dynamic Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadata_namespace:
                                                    description: The metadata namespace. Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information from the request/response body
                                                    type: object
                                                  header:
                                                    description: Extract information from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                              type: object
                                            headers_to_append:
                                              description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                              items:
                                                description: Defines a header-template pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignore_error_on_parse:
                                              description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                              type: boolean
                                            merge_extractors_to_body:
                                              description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                              type: object
                                            parse_body_behavior:
                                              enum:
                                              - - ParseAsJson
                                                - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                              type: object
                                          type: object
                                        xslt_transformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            non_xml_transform:
                                              description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                              type: boolean
                                            set_content_type:
                                              description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                              type: string
                                          type: object
                                      type: object
                                    response_transformation:
                                      description: Transformation to apply on the response.
                                      properties:
                                        header_body_transform:
                                          description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                          type: object
                                        transformation_template:
                                          description: Apply transformation templates.
                                          properties:
                                            advanced_templates:
                                              description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamic_metadata_values:
                                              description: Use this field to set Dynamic Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadata_namespace:
                                                    description: The metadata namespace. Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information from the request/response body
                                                    type: object
                                                  header:
                                                    description: Extract information from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                              type: object
                                            headers_to_append:
                                              description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                              items:
                                                description: Defines a header-template pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignore_error_on_parse:
                                              description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                              type: boolean
                                            merge_extractors_to_body:
                                              description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                              type: object
                                            parse_body_behavior:
                                              enum:
                                              - - ParseAsJson
                                                - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                              type: object
                                          type: object
                                        xslt_transformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            non_xml_transform:
                                              description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                              type: boolean
                                            set_content_type:
                                              description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                              response_transforms:
                                description: Transformations to apply on the response. This field is only consulted if there is no response transformation in the matched `request_transforms`. i.e. Only one response transformation will be executed. The first response transformation that matches will apply.
                                items:
                                  properties:
                                    matchers:
                                      description: Response headers to match on.
                                      items:
                                        description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                                        properties:
                                          invert_match:
                                            description: If set to true, the result of the match will be inverted. Defaults to false.
                                            type: boolean
                                          name:
                                            description: Specifies the name of the header in the request.
                                            type: string
                                          regex:
                                            description: Specifies whether the header value should be treated as regex or not.
                                            type: boolean
                                          value:
                                            description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                            type: string
                                        type: object
                                      type: array
                                    response_code_details:
                                      description: Response code detail to match on. To see the response code details for your usecase, you can use the envoy access log %RESPONSE_CODE_DETAILS% formatter to log it.
                                      type: string
                                    response_transformation:
                                      description: Transformation to apply on the response.
                                      properties:
                                        header_body_transform:
                                          description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                          type: object
                                        transformation_template:
                                          description: Apply transformation templates.
                                          properties:
                                            advanced_templates:
                                              description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamic_metadata_values:
                                              description: Use this field to set Dynamic Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadata_namespace:
                                                    description: The metadata namespace. Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information from the request/response body
                                                    type: object
                                                  header:
                                                    description: Extract information from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                              type: object
                                            headers_to_append:
                                              description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                              items:
                                                description: Defines a header-template pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignore_error_on_parse:
                                              description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                              type: boolean
                                            merge_extractors_to_body:
                                              description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                              type: object
                                            parse_body_behavior:
                                              enum:
                                              - - ParseAsJson
                                                - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                              type: object
                                          type: object
                                        xslt_transformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            non_xml_transform:
                                              description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                              type: boolean
                                            set_content_type:
                                              description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                        type: object
                      timeout:
                        description: Specifies the upstream timeout for the route. If not specified, the default is 15s. This spans between the point at which the entire downstream request (i.e. end-of-stream) has been processed and when the upstream response has been completely processed. A value of 0 will disable the route’s timeout.
                        properties:
                          nanos:
                            description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                            format: int32
                            type: integer
                          seconds:
                            description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                            format: int64
                            type: integer
                        type: object
                      tracing:
                        description: 'Defines route-specific tracing configuration. See here for additional information on Envoy''s tracing capabilities: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/observability/tracing.html See here for additional information about configuring tracing with Gloo: https://gloo.solo.io/observability/tracing/'
                        properties:
                          propagate:
                            description: Optional. Default is true, If set to false, the tracing headers will not propagate to the upstream.
                            properties:
                              value:
                                description: The bool value.
                                type: boolean
                            type: object
                          route_descriptor:
                            description: Optional. If set, will be used to identify the route that produced the trace. Note that this value will be overridden if the "x-envoy-decorator-operation" header is passed.
                            type: string
                          trace_percentages:
                            description: Requests can produce traces by random sampling or when the `x-client-trace-id` header is provided. TracePercentages defines the limits for random, forced, and overall tracing percentages.
                            properties:
                              client_sample_percentage:
                                description: Percentage of requests that should produce traces when the `x-client-trace-id` header is provided. optional, defaults to 100.0 This should be a value between 0.0 and 100.0, with up to 6 significant digits.
                                properties:
                                  value:
                                    description: The float value.
                                    type: number
                                type: object
                              overall_sample_percentage:
                                description: Overall percentage of requests that should produce traces. optional, defaults to 100.0 This should be a value between 0.0 and 100.0, with up to 6 significant digits.
                                properties:
                                  value:
                                    description: The float value.
                                    type: number
                                type: object
                              random_sample_percentage:
                                description: Percentage of requests that should produce traces by random sampling. optional, defaults to 100.0 This should be a value between 0.0 and 100.0, with up to 6 significant digits.
                                properties:
                                  value:
                                    description: The float value.
                                    type: number
                                type: object
                            type: object
                        type: object
                      transformations:
                        description: 'Transformations to apply. Note: this field is superseded by `staged_transformations`. If `staged_transformations.regular` is set, this field will be ignored.'
                        properties:
                          clear_route_cache:
                            description: Clear the route cache if the request transformation was applied.
                            type: boolean
                          request_transformation:
                            description: Apply a transformation to requests.
                            properties:
                              header_body_transform:
                                description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                type: object
                              transformation_template:
                                description: Apply transformation templates.
                                properties:
                                  advanced_templates:
                                    description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                    type: boolean
                                  body:
                                    description: Apply a template to the body
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                  dynamic_metadata_values:
                                    description: Use this field to set Dynamic Metadata.
                                    items:
                                      description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                      properties:
                                        key:
                                          description: The metadata key.
                                          type: string
                                        metadata_namespace:
                                          description: The metadata namespace. Defaults to the filter namespace.
                                          type: string
                                        value:
                                          description: A template that determines the metadata value.
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  extractors:
                                    additionalProperties:
                                      properties:
                                        body:
                                          description: Extract information from the request/response body
                                          type: object
                                        header:
                                          description: Extract information from headers
                                          type: string
                                        regex:
                                          description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                          type: string
                                        subgroup:
                                          description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                          format: int32
                                          type: integer
                                      type: object
                                    description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                    type: object
                                  headers:
                                    additionalProperties:
                                      properties:
                                        text:
                                          type: string
                                      type: object
                                    description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                    type: object
                                  headers_to_append:
                                    description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                    items:
                                      description: Defines a header-template pair to be used in `headers_to_append`
                                      properties:
                                        key:
                                          description: Header name
                                          type: string
                                        value:
                                          description: Apply a template to the header value
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  ignore_error_on_parse:
                                    description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                    type: boolean
                                  merge_extractors_to_body:
                                    description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                    type: object
                                  parse_body_behavior:
                                    enum:
                                    - - ParseAsJson
                                      - DontParse
                                    type: string
                                  passthrough:
                                    description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                    type: object
                                type: object
                              xslt_transformation:
                                description: '(Enterprise Only): Xslt Transformation'
                                properties:
                                  non_xml_transform:
                                    description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                    type: boolean
                                  set_content_type:
                                    description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                    type: string
                                  xslt:
                                    description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                    type: string
                                type: object
                            type: object
                          response_transformation:
                            description: Apply a transformation to responses.
                            properties:
                              header_body_transform:
                                description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                type: object
                              transformation_template:
                                description: Apply transformation templates.
                                properties:
                                  advanced_templates:
                                    description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                    type: boolean
                                  body:
                                    description: Apply a template to the body
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                  dynamic_metadata_values:
                                    description: Use this field to set Dynamic Metadata.
                                    items:
                                      description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                      properties:
                                        key:
                                          description: The metadata key.
                                          type: string
                                        metadata_namespace:
                                          description: The metadata namespace. Defaults to the filter namespace.
                                          type: string
                                        value:
                                          description: A template that determines the metadata value.
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  extractors:
                                    additionalProperties:
                                      properties:
                                        body:
                                          description: Extract information from the request/response body
                                          type: object
                                        header:
                                          description: Extract information from headers
                                          type: string
                                        regex:
                                          description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                          type: string
                                        subgroup:
                                          description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                          format: int32
                                          type: integer
                                      type: object
                                    description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                    type: object
                                  headers:
                                    additionalProperties:
                                      properties:
                                        text:
                                          type: string
                                      type: object
                                    description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                    type: object
                                  headers_to_append:
                                    description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                    items:
                                      description: Defines a header-template pair to be used in `headers_to_append`
                                      properties:
                                        key:
                                          description: Header name
                                          type: string
                                        value:
                                          description: Apply a template to the header value
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  ignore_error_on_parse:
                                    description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                    type: boolean
                                  merge_extractors_to_body:
                                    description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                    type: object
                                  parse_body_behavior:
                                    enum:
                                    - - ParseAsJson
                                      - DontParse
                                    type: string
                                  passthrough:
                                    description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                    type: object
                                type: object
                              xslt_transformation:
                                description: '(Enterprise Only): Xslt Transformation'
                                properties:
                                  non_xml_transform:
                                    description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                    type: boolean
                                  set_content_type:
                                    description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                    type: string
                                  xslt:
                                    description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                    type: string
                                type: object
                            type: object
                        type: object
                      upgrades:
                        description: Route configuration for protocol upgrade requests.
                        items:
                          properties:
                            websocket:
                              description: Specification for websocket upgrade requests.
                              properties:
                                enabled:
                                  description: Whether the upgrade should be enabled. If left unset, Envoy will enable the protocol upgrade.
                                  properties:
                                    value:
                                      description: The bool value.
                                      type: boolean
                                  type: object
                              type: object
                          type: object
                        type: array
                      waf:
                        description: 'Enterprise-only: Config for Web Application Firewall (WAF), supporting the popular ModSecurity 3.0 ruleset'
                        properties:
                          audit_logging:
                            description: Audit Log settings
                            properties:
                              action:
                                enum:
                                - - NEVER
                                  - RELEVANT_ONLY
                                  - ALWAYS
                                type: string
                              location:
                                enum:
                                - - FILTER_STATE
                                  - DYNAMIC_METADATA
                                type: string
                            type: object
                          core_rule_set:
                            description: Add OWASP core rule set if nil will not be added
                            properties:
                              custom_settings_file:
                                description: String representing the core rule set custom config options
                                type: string
                              custom_settings_string:
                                description: String representing the core rule set custom config options
                                type: string
                            type: object
                          custom_intervention_message:
                            description: Custom massage to display if an intervention occurs.
                            type: string
                          disabled:
                            description: Disable waf on this resource (if omitted defaults to false). If a route/virtual host is configured with WAF, you must explicitly disable its WAF, i.e., it will not inherit the disabled status of its parent
                            type: boolean
                          request_headers_only:
                            description: Only process request headers, not buffering the request body
                            type: boolean
                          response_headers_only:
                            description: Only process response headers, not buffering the response body
                            type: boolean
                          rule_sets:
                            description: Custom rule sets rules to add
                            items:
                              properties:
                                directory:
                                  description: A directory to include. all *.conf files in this directory will be included. sub directories will NOT be checked.
                                  type: string
                                files:
                                  description: Array of files to include
                                  items:
                                    type: string
                                  type: array
                                rule_str:
                                  description: String of rules which are added directly
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  redirect_action:
                    description: Redirect actions tell the proxy to return a redirect response to the downstream client.
                    properties:
                      host_redirect:
                        description: The host portion of the URL will be swapped with this value.
                        type: string
                      https_redirect:
                        description: The scheme portion of the URL will be swapped with "https".
                        type: boolean
                      path_redirect:
                        description: The path portion of the URL will be swapped with this value.
                        type: string
                      prefix_rewrite:
                        description: Indicates that during redirection, the matched prefix (or path) should be swapped with this value. This option allows redirect URLs be dynamically created based on the request.
                        type: string
                      response_code:
                        description: The HTTP status code to use in the redirect response. The default response code is MOVED_PERMANENTLY (301).
                        enum:
                        - - MOVED_PERMANENTLY
                          - FOUND
                          - SEE_OTHER
                          - TEMPORARY_REDIRECT
                          - PERMANENT_REDIRECT
                        type: string
                      strip_query:
                        description: Indicates that during redirection, the query portion of the URL will be removed. Default value is false.
                        type: boolean
                    type: object
                  route_action:
                    description: This action is the primary action to be selected for most routes. The RouteAction tells the proxy to route requests to an upstream.
                    properties:
                      cluster_header:
                        description: Envoy will determine the cluster to route to by reading the value of the HTTP header named by cluster_header from the request headers. If the header is not found or the referenced cluster does not exist, Envoy will return a 404 response. Avoid using this whenever possible, it does not allow for custom filter configuration based on Virtual Host.
                        type: string
                      multi:
                        description: Use MultiDestination to load balance requests between multiple upstreams (by weight)
                        properties:
                          destinations:
                            description: This list must contain at least one destination or the listener housing this route will be invalid, causing Gloo to error the parent proxy resource.
                            items:
                              description: WeightedDestination attaches a weight to a single destination.
                              properties:
                                destination:
                                  properties:
                                    consul:
                                      description: Route requests to a consul service
                                      properties:
                                        data_centers:
                                          description: If provided, load balance traffic only between services running in the given [data centers](https://www.consul.io/docs/internals/architecture.html).
                                          items:
                                            type: string
                                          type: array
                                        service_name:
                                          description: The name of the target service. This field is required.
                                          type: string
                                        tags:
                                          description: If provided, load balance traffic only between services matching all the given tags.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    destination_spec:
                                      description: Some upstreams utilize options which require or permit additional configuration on routes targeting them. gRPC upstreams, for example, allow specifying REST-style parameters for JSON-to-gRPC transcoding in the destination config. If the destination config is required for the upstream and not provided by the user, Gloo will invalidate the destination and its parent resources.
                                      properties:
                                        aws:
                                          properties:
                                            invocation_style:
                                              description: Can be either Sync or Async.
                                              enum:
                                              - - SYNC
                                                - ASYNC
                                              type: string
                                            logical_name:
                                              description: The Logical Name of the LambdaFunctionSpec to be invoked.
                                              type: string
                                            response_transformation:
                                              description: de-jsonify response bodies returned from aws lambda
                                              type: boolean
                                          type: object
                                        azure:
                                          properties:
                                            function_name:
                                              description: The Function Name of the FunctionSpec to be invoked.
                                              type: string
                                          type: object
                                        grpc:
                                          properties:
                                            function:
                                              description: The name of the function.
                                              type: string
                                            package:
                                              description: The proto package of the function.
                                              type: string
                                            parameters:
                                              description: Parameters describe how to extract the function parameters from the request.
                                              properties:
                                                headers:
                                                  additionalProperties:
                                                    type: string
                                                  description: 'headers that will be used to extract data for processing output templates Gloo will search for parameters by their name in header value strings, enclosed in single curly braces Example: extensions: parameters: headers: x-user-id: ''{userId}'''
                                                  type: object
                                                path:
                                                  description: 'part of the (or the entire) path that will be used extract data for processing output templates Gloo will search for parameters by their name in header value strings, enclosed in single curly braces Example: extensions: parameters: path: /users/{ userId }'
                                                  properties:
                                                    value:
                                                      description: The string value.
                                                      type: string
                                                  type: object
                                              type: object
                                            service:
                                              description: The name of the service of the function.
                                              type: string
                                          type: object
                                        rest:
                                          properties:
                                            function_name:
                                              type: string
                                            parameters:
                                              properties:
                                                headers:
                                                  additionalProperties:
                                                    type: string
                                                  description: 'headers that will be used to extract data for processing output templates Gloo will search for parameters by their name in header value strings, enclosed in single curly braces Example: extensions: parameters: headers: x-user-id: ''{userId}'''
                                                  type: object
                                                path:
                                                  description: 'part of the (or the entire) path that will be used extract data for processing output templates Gloo will search for parameters by their name in header value strings, enclosed in single curly braces Example: extensions: parameters: path: /users/{ userId }'
                                                  properties:
                                                    value:
                                                      description: The string value.
                                                      type: string
                                                  type: object
                                              type: object
                                            response_transformation:
                                              properties:
                                                advanced_templates:
                                                  description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                  type: boolean
                                                body:
                                                  description: Apply a template to the body
                                                  properties:
                                                    text:
                                                      type: string
                                                  type: object
                                                dynamic_metadata_values:
                                                  description: Use this field to set Dynamic Metadata.
                                                  items:
                                                    description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                    properties:
                                                      key:
                                                        description: The metadata key.
                                                        type: string
                                                      metadata_namespace:
                                                        description: The metadata namespace. Defaults to the filter namespace.
                                                        type: string
                                                      value:
                                                        description: A template that determines the metadata value.
                                                        properties:
                                                          text:
                                                            type: string
                                                        type: object
                                                    type: object
                                                  type: array
                                                extractors:
                                                  additionalProperties:
                                                    properties:
                                                      body:
                                                        description: Extract information from the request/response body
                                                        type: object
                                                      header:
                                                        description: Extract information from headers
                                                        type: string
                                                      regex:
                                                        description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                        type: string
                                                      subgroup:
                                                        description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                  description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                  type: object
                                                headers:
                                                  additionalProperties:
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                  description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                  type: object
                                                headers_to_append:
                                                  description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                  items:
                                                    description: Defines a header-template pair to be used in `headers_to_append`
                                                    properties:
                                                      key:
                                                        description: Header name
                                                        type: string
                                                      value:
                                                        description: Apply a template to the header value
                                                        properties:
                                                          text:
                                                            type: string
                                                        type: object
                                                    type: object
                                                  type: array
                                                ignore_error_on_parse:
                                                  description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                  type: boolean
                                                merge_extractors_to_body:
                                                  description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                  type: object
                                                parse_body_behavior:
                                                  enum:
                                                  - - ParseAsJson
                                                    - DontParse
                                                  type: string
                                                passthrough:
                                                  description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                  type: object
                                              type: object
                                          type: object
                                      type: object
                                    kube:
                                      description: Route requests to a kubernetes service
                                      properties:
                                        port:
                                          description: The port attribute of the service
                                          format: int32
                                          type: integer
                                        ref:
                                          description: The target service
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                    subset:
                                      description: If specified, traffic will only be routed to a subset of the upstream. If upstream doesn't contain the specified subset, we will fallback to normal upstream routing.
                                      properties:
                                        values:
                                          additionalProperties:
                                            type: string
                                          type: object
                                      type: object
                                    upstream:
                                      description: Route requests to a Gloo upstream
                                      properties:
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      type: object
                                  type: object
                                options:
                                  description: Apply configuration to traffic that is sent to this weighted destination
                                  properties:
                                    buffer_per_route:
                                      description: 'BufferPerRoute can be used to set the maximum request size that the filter will buffer before the connection manager will stop buffering and return a 413 response. Note: If you have not set a global config (at the gateway level), this override will not do anything by itself.'
                                      properties:
                                        buffer:
                                          description: 'Override the global configuration of the buffer filter with this new config. Note: If you have not set a global config (at the gateway level), this override will not do anything by itself.'
                                          properties:
                                            max_request_bytes:
                                              description: The maximum request size that the filter will buffer before the connection manager will stop buffering and return a 413 response.
                                              properties:
                                                value:
                                                  description: The uint32 value.
                                                  format: int32
                                                  type: integer
                                              type: object
                                          type: object
                                        disabled:
                                          description: Disable the buffer filter for this particular vhost or route.
                                          type: boolean
                                      type: object
                                    csrf:
                                      description: Csrf can be used to set percent of requests for which the CSRF filter is enabled, enable shadow-only mode where policies will be evaluated and tracked, but not enforced and add additional source origins that will be allowed in addition to the destination origin. For more, see https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/csrf/v2/csrf.proto
                                      properties:
                                        additional_origins:
                                          description: Specifies additional source origins that will be allowed in addition to the destination origin.
                                          items:
                                            description: 'Specifies the way to match a string. [#next-free-field: 7]'
                                            properties:
                                              exact:
                                                description: The input string must match exactly the string specified here.
                                                type: string
                                              ignore_case:
                                                description: If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no effect for the safe_regex match. For example, the matcher *data* will match both input string *Data* and *data* if set to true.
                                                type: boolean
                                              prefix:
                                                description: 'The input string must have the prefix specified here. Note: empty prefix is not allowed, please use regex instead.'
                                                type: string
                                              safe_regex:
                                                description: The input string must match the regular expression specified here.
                                                properties:
                                                  google_re2:
                                                    description: Google's RE2 regex engine.
                                                    properties:
                                                      max_program_size:
                                                        description: This field controls the RE2 "program size" which is a rough estimate of how complex a compiled regex is to evaluate. A regex that has a program size greater than the configured value will fail to compile. In this case, the configured max program size can be increased or the regex can be simplified. If not specified, the default is 100.
                                                        properties:
                                                          value:
                                                            description: The uint32 value.
                                                            format: int32
                                                            type: integer
                                                        type: object
                                                    type: object
                                                  regex:
                                                    description: The regex match string. The string must be supported by the configured engine.
                                                    type: string
                                                type: object
                                              suffix:
                                                description: 'The input string must have the suffix specified here. Note: empty prefix is not allowed, please use regex instead.'
                                                type: string
                                            type: object
                                          type: array
                                        filter_enabled:
                                          description: Specifies the % of requests for which the CSRF filter is enabled.
                                          properties:
                                            default_value:
                                              description: Default value if the runtime value's for the numerator/denominator keys are not available.
                                              properties:
                                                denominator:
                                                  description: Specifies the denominator. If the denominator specified is less than the numerator, the final fractional percentage is capped at 1 (100%).
                                                  enum:
                                                  - - HUNDRED
                                                    - TEN_THOUSAND
                                                    - MILLION
                                                  type: string
                                                numerator:
                                                  description: Specifies the numerator. Defaults to 0.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            runtime_key:
                                              description: Runtime key for a YAML representation of a FractionalPercent.
                                              type: string
                                          type: object
                                        shadow_enabled:
                                          description: Specifies that CSRF policies will be evaluated and tracked, but not enforced.
                                          properties:
                                            default_value:
                                              description: Default value if the runtime value's for the numerator/denominator keys are not available.
                                              properties:
                                                denominator:
                                                  description: Specifies the denominator. If the denominator specified is less than the numerator, the final fractional percentage is capped at 1 (100%).
                                                  enum:
                                                  - - HUNDRED
                                                    - TEN_THOUSAND
                                                    - MILLION
                                                  type: string
                                                numerator:
                                                  description: Specifies the numerator. Defaults to 0.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            runtime_key:
                                              description: Runtime key for a YAML representation of a FractionalPercent.
                                              type: string
                                          type: object
                                      type: object
                                    extauth:
                                      description: 'Enterprise-only: Authentication configuration'
                                      properties:
                                        config_ref:
                                          description: A reference to an AuthConfig. This is used to configure the Gloo Edge Enterprise extauth server.
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        custom_auth:
                                          description: Use this field if you are running your own custom extauth server.
                                          properties:
                                            context_extensions:
                                              additionalProperties:
                                                type: string
                                              description: When a request matches the virtual host, route, or weighted destination on which this configuration is defined, Gloo will add the given context_extensions to the request that is sent to the external authorization server. This allows the server to base the auth decision on metadata that you define on the source of the request.
                                              type: object
                                          type: object
                                        disable:
                                          description: Set to true to disable auth on the virtual host/route.
                                          type: boolean
                                      type: object
                                    extensions:
                                      description: Extensions will be passed along from Listeners, Gateways, VirtualServices, Routes, and Route tables to the underlying Proxy, making them useful for controllers, validation tools, etc. which interact with kubernetes yaml.
                                      properties:
                                        configs:
                                          additionalProperties:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: object
                                      type: object
                                    header_manipulation:
                                      description: Append/Remove headers on Requests or Responses to/from this Weighted Destination
                                      properties:
                                        request_headers_to_add:
                                          description: Specifies a list of HTTP headers that should be added to each request handled by this route or virtual host. For more information, including details on header value syntax, see the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers) .
                                          items:
                                            description: Header name/value pair plus option to control append behavior.
                                            properties:
                                              append:
                                                description: Should the value be appended? If true (default), the value is appended to existing values.
                                                properties:
                                                  value:
                                                    description: The bool value.
                                                    type: boolean
                                                type: object
                                              header:
                                                description: Explicitly specified header
                                                properties:
                                                  key:
                                                    description: Header name.
                                                    type: string
                                                  value:
                                                    description: Header value.
                                                    type: string
                                                type: object
                                              header_secret_ref:
                                                description: Reference to header contained in a secret
                                                properties:
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                type: object
                                            type: object
                                          type: array
                                        request_headers_to_remove:
                                          description: Specifies a list of HTTP headers that should be removed from each request handled by this route or virtual host.
                                          items:
                                            type: string
                                          type: array
                                        response_headers_to_add:
                                          description: Specifies a list of HTTP headers that should be added to each response handled by this route or host. For more information, including details on header value syntax, see the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers) .
                                          items:
                                            description: Header name/value pair plus option to control append behavior.
                                            properties:
                                              append:
                                                description: Should the value be appended? If true (default), the value is appended to existing values.
                                                properties:
                                                  value:
                                                    description: The bool value.
                                                    type: boolean
                                                type: object
                                              header:
                                                description: Header name/value pair that this option applies to.
                                                properties:
                                                  key:
                                                    description: Header name.
                                                    type: string
                                                  value:
                                                    description: Header value.
                                                    type: string
                                                type: object
                                            type: object
                                          type: array
                                        response_headers_to_remove:
                                          description: Specifies a list of HTTP headers that should be removed from each response handled by this route or virtual host.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    staged_transformations:
                                      description: Early transformations stage. These transformations run before most other options are processed. If the `regular` field is set in here, the `transformations` field is ignored.
                                      properties:
                                        early:
                                          description: Early transformations happen before most other options (Like Auth and Rate Limit).
                                          properties:
                                            request_transforms:
                                              description: Transformations to apply on the request. The first request that matches will apply.
                                              items:
                                                properties:
                                                  clear_route_cache:
                                                    description: Should we clear the route cache if a transformation was matched.
                                                    type: boolean
                                                  matcher:
                                                    description: Matches on the request properties.
                                                    properties:
                                                      case_sensitive:
                                                        description: Indicates that prefix/path matching should be case sensitive. The default is true.
                                                        properties:
                                                          value:
                                                            description: The bool value.
                                                            type: boolean
                                                        type: object
                                                      exact:
                                                        description: If specified, the route is an exact path rule meaning that the path must exactly match the *:path* header once the query string is removed.
                                                        type: string
                                                      headers:
                                                        description: Specifies a set of headers that the route should match on. The router will check the request’s headers against all the specified headers in the route config. A match will happen if all the headers in the route are present in the request with the same values (or based on presence if the value field is not in the config).
                                                        items:
                                                          description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                                                          properties:
                                                            invert_match:
                                                              description: If set to true, the result of the match will be inverted. Defaults to false.
                                                              type: boolean
                                                            name:
                                                              description: Specifies the name of the header in the request.
                                                              type: string
                                                            regex:
                                                              description: Specifies whether the header value should be treated as regex or not.
                                                              type: boolean
                                                            value:
                                                              description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                                              type: string
                                                          type: object
                                                        type: array
                                                      methods:
                                                        description: HTTP Method/Verb(s) to match on. If none specified, the matcher will ignore the HTTP Method
                                                        items:
                                                          type: string
                                                        type: array
                                                      prefix:
                                                        description: If specified, the route is a prefix rule meaning that the prefix must match the beginning of the *:path* header.
                                                        type: string
                                                      query_parameters:
                                                        description: Specifies a set of URL query parameters on which the route should match. The router will check the query string from the *path* header against all the specified query parameters. If the number of specified query parameters is nonzero, they all must match the *path* header's query string for a match to occur.
                                                        items:
                                                          description: Query parameter matching treats the query string of a request's :path header as an ampersand-separated list of keys and/or key=value elements.
                                                          properties:
                                                            name:
                                                              description: Specifies the name of a key that must be present in the requested *path*'s query string.
                                                              type: string
                                                            regex:
                                                              description: Specifies whether the query parameter value is a regular expression. Defaults to false. The entire query parameter value (i.e., the part to the right of the equals sign in "key=value") must match the regex. E.g., the regex "\d+$" will match "123" but not "a123" or "123a".
                                                              type: boolean
                                                            value:
                                                              description: Specifies the value of the key. If the value is absent, a request that contains the key in its query string will match, whether the key appears with a value (e.g., "?debug=true") or not (e.g., "?debug")
                                                              type: string
                                                          type: object
                                                        type: array
                                                      regex:
                                                        description: If specified, the route is a regular expression rule meaning that the regex must match the *:path* header once the query string is removed. The entire path (without the query string) must match the regex. The rule will not match if only a sub-sequence of the *:path* header matches the regex. The regex grammar is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                                                        type: string
                                                    type: object
                                                  request_transformation:
                                                    description: Transformation to apply on the request.
                                                    properties:
                                                      header_body_transform:
                                                        description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                                        type: object
                                                      transformation_template:
                                                        description: Apply transformation templates.
                                                        properties:
                                                          advanced_templates:
                                                            description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                            type: boolean
                                                          body:
                                                            description: Apply a template to the body
                                                            properties:
                                                              text:
                                                                type: string
                                                            type: object
                                                          dynamic_metadata_values:
                                                            description: Use this field to set Dynamic Metadata.
                                                            items:
                                                              description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                              properties:
                                                                key:
                                                                  description: The metadata key.
                                                                  type: string
                                                                metadata_namespace:
                                                                  description: The metadata namespace. Defaults to the filter namespace.
                                                                  type: string
                                                                value:
                                                                  description: A template that determines the metadata value.
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          extractors:
                                                            additionalProperties:
                                                              properties:
                                                                body:
                                                                  description: Extract information from the request/response body
                                                                  type: object
                                                                header:
                                                                  description: Extract information from headers
                                                                  type: string
                                                                regex:
                                                                  description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                                  type: string
                                                                subgroup:
                                                                  description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                                  format: int32
                                                                  type: integer
                                                              type: object
                                                            description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                            type: object
                                                          headers:
                                                            additionalProperties:
                                                              properties:
                                                                text:
                                                                  type: string
                                                              type: object
                                                            description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                            type: object
                                                          headers_to_append:
                                                            description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                            items:
                                                              description: Defines a header-template pair to be used in `headers_to_append`
                                                              properties:
                                                                key:
                                                                  description: Header name
                                                                  type: string
                                                                value:
                                                                  description: Apply a template to the header value
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          ignore_error_on_parse:
                                                            description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                            type: boolean
                                                          merge_extractors_to_body:
                                                            description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                            type: object
                                                          parse_body_behavior:
                                                            enum:
                                                            - - ParseAsJson
                                                              - DontParse
                                                            type: string
                                                          passthrough:
                                                            description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                            type: object
                                                        type: object
                                                      xslt_transformation:
                                                        description: '(Enterprise Only): Xslt Transformation'
                                                        properties:
                                                          non_xml_transform:
                                                            description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                                            type: boolean
                                                          set_content_type:
                                                            description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                                            type: string
                                                          xslt:
                                                            description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                                            type: string
                                                        type: object
                                                    type: object
                                                  response_transformation:
                                                    description: Transformation to apply on the response.
                                                    properties:
                                                      header_body_transform:
                                                        description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                                        type: object
                                                      transformation_template:
                                                        description: Apply transformation templates.
                                                        properties:
                                                          advanced_templates:
                                                            description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                            type: boolean
                                                          body:
                                                            description: Apply a template to the body
                                                            properties:
                                                              text:
                                                                type: string
                                                            type: object
                                                          dynamic_metadata_values:
                                                            description: Use this field to set Dynamic Metadata.
                                                            items:
                                                              description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                              properties:
                                                                key:
                                                                  description: The metadata key.
                                                                  type: string
                                                                metadata_namespace:
                                                                  description: The metadata namespace. Defaults to the filter namespace.
                                                                  type: string
                                                                value:
                                                                  description: A template that determines the metadata value.
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          extractors:
                                                            additionalProperties:
                                                              properties:
                                                                body:
                                                                  description: Extract information from the request/response body
                                                                  type: object
                                                                header:
                                                                  description: Extract information from headers
                                                                  type: string
                                                                regex:
                                                                  description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                                  type: string
                                                                subgroup:
                                                                  description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                                  format: int32
                                                                  type: integer
                                                              type: object
                                                            description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                            type: object
                                                          headers:
                                                            additionalProperties:
                                                              properties:
                                                                text:
                                                                  type: string
                                                              type: object
                                                            description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                            type: object
                                                          headers_to_append:
                                                            description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                            items:
                                                              description: Defines a header-template pair to be used in `headers_to_append`
                                                              properties:
                                                                key:
                                                                  description: Header name
                                                                  type: string
                                                                value:
                                                                  description: Apply a template to the header value
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          ignore_error_on_parse:
                                                            description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                            type: boolean
                                                          merge_extractors_to_body:
                                                            description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                            type: object
                                                          parse_body_behavior:
                                                            enum:
                                                            - - ParseAsJson
                                                              - DontParse
                                                            type: string
                                                          passthrough:
                                                            description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                            type: object
                                                        type: object
                                                      xslt_transformation:
                                                        description: '(Enterprise Only): Xslt Transformation'
                                                        properties:
                                                          non_xml_transform:
                                                            description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                                            type: boolean
                                                          set_content_type:
                                                            description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                                            type: string
                                                          xslt:
                                                            description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                                            type: string
                                                        type: object
                                                    type: object
                                                type: object
                                              type: array
                                            response_transforms:
                                              description: Transformations to apply on the response. This field is only consulted if there is no response transformation in the matched `request_transforms`. i.e. Only one response transformation will be executed. The first response transformation that matches will apply.
                                              items:
                                                properties:
                                                  matchers:
                                                    description: Response headers to match on.
                                                    items:
                                                      description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                                                      properties:
                                                        invert_match:
                                                          description: If set to true, the result of the match will be inverted. Defaults to false.
                                                          type: boolean
                                                        name:
                                                          description: Specifies the name of the header in the request.
                                                          type: string
                                                        regex:
                                                          description: Specifies whether the header value should be treated as regex or not.
                                                          type: boolean
                                                        value:
                                                          description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                                          type: string
                                                      type: object
                                                    type: array
                                                  response_code_details:
                                                    description: Response code detail to match on. To see the response code details for your usecase, you can use the envoy access log %RESPONSE_CODE_DETAILS% formatter to log it.
                                                    type: string
                                                  response_transformation:
                                                    description: Transformation to apply on the response.
                                                    properties:
                                                      header_body_transform:
                                                        description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                                        type: object
                                                      transformation_template:
                                                        description: Apply transformation templates.
                                                        properties:
                                                          advanced_templates:
                                                            description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                            type: boolean
                                                          body:
                                                            description: Apply a template to the body
                                                            properties:
                                                              text:
                                                                type: string
                                                            type: object
                                                          dynamic_metadata_values:
                                                            description: Use this field to set Dynamic Metadata.
                                                            items:
                                                              description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                              properties:
                                                                key:
                                                                  description: The metadata key.
                                                                  type: string
                                                                metadata_namespace:
                                                                  description: The metadata namespace. Defaults to the filter namespace.
                                                                  type: string
                                                                value:
                                                                  description: A template that determines the metadata value.
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          extractors:
                                                            additionalProperties:
                                                              properties:
                                                                body:
                                                                  description: Extract information from the request/response body
                                                                  type: object
                                                                header:
                                                                  description: Extract information from headers
                                                                  type: string
                                                                regex:
                                                                  description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                                  type: string
                                                                subgroup:
                                                                  description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                                  format: int32
                                                                  type: integer
                                                              type: object
                                                            description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                            type: object
                                                          headers:
                                                            additionalProperties:
                                                              properties:
                                                                text:
                                                                  type: string
                                                              type: object
                                                            description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                            type: object
                                                          headers_to_append:
                                                            description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                            items:
                                                              description: Defines a header-template pair to be used in `headers_to_append`
                                                              properties:
                                                                key:
                                                                  description: Header name
                                                                  type: string
                                                                value:
                                                                  description: Apply a template to the header value
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          ignore_error_on_parse:
                                                            description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                            type: boolean
                                                          merge_extractors_to_body:
                                                            description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                            type: object
                                                          parse_body_behavior:
                                                            enum:
                                                            - - ParseAsJson
                                                              - DontParse
                                                            type: string
                                                          passthrough:
                                                            description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                            type: object
                                                        type: object
                                                      xslt_transformation:
                                                        description: '(Enterprise Only): Xslt Transformation'
                                                        properties:
                                                          non_xml_transform:
                                                            description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                                            type: boolean
                                                          set_content_type:
                                                            description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                                            type: string
                                                          xslt:
                                                            description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                                            type: string
                                                        type: object
                                                    type: object
                                                type: object
                                              type: array
                                          type: object
                                        inherit_transformation:
                                          description: Inherit transformation config from parent. This has no affect on VirtualHost level transformations. If a RouteTable or Route wants to inherit transformations from it's parent RouteTable or VirtualHost, this should be set to true, else transformations from parents will not be inherited. Transformations are ordered so the child's transformation gets priority, so in the case where a child and parent's transformation matchers are the same, only the child's transformation will run because only one transformation will run per stage. Defaults to false.
                                          type: boolean
                                        regular:
                                          description: Regular transformations happen after Auth and Rate limit decisions has been made.
                                          properties:
                                            request_transforms:
                                              description: Transformations to apply on the request. The first request that matches will apply.
                                              items:
                                                properties:
                                                  clear_route_cache:
                                                    description: Should we clear the route cache if a transformation was matched.
                                                    type: boolean
                                                  matcher:
                                                    description: Matches on the request properties.
                                                    properties:
                                                      case_sensitive:
                                                        description: Indicates that prefix/path matching should be case sensitive. The default is true.
                                                        properties:
                                                          value:
                                                            description: The bool value.
                                                            type: boolean
                                                        type: object
                                                      exact:
                                                        description: If specified, the route is an exact path rule meaning that the path must exactly match the *:path* header once the query string is removed.
                                                        type: string
                                                      headers:
                                                        description: Specifies a set of headers that the route should match on. The router will check the request’s headers against all the specified headers in the route config. A match will happen if all the headers in the route are present in the request with the same values (or based on presence if the value field is not in the config).
                                                        items:
                                                          description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                                                          properties:
                                                            invert_match:
                                                              description: If set to true, the result of the match will be inverted. Defaults to false.
                                                              type: boolean
                                                            name:
                                                              description: Specifies the name of the header in the request.
                                                              type: string
                                                            regex:
                                                              description: Specifies whether the header value should be treated as regex or not.
                                                              type: boolean
                                                            value:
                                                              description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                                              type: string
                                                          type: object
                                                        type: array
                                                      methods:
                                                        description: HTTP Method/Verb(s) to match on. If none specified, the matcher will ignore the HTTP Method
                                                        items:
                                                          type: string
                                                        type: array
                                                      prefix:
                                                        description: If specified, the route is a prefix rule meaning that the prefix must match the beginning of the *:path* header.
                                                        type: string
                                                      query_parameters:
                                                        description: Specifies a set of URL query parameters on which the route should match. The router will check the query string from the *path* header against all the specified query parameters. If the number of specified query parameters is nonzero, they all must match the *path* header's query string for a match to occur.
                                                        items:
                                                          description: Query parameter matching treats the query string of a request's :path header as an ampersand-separated list of keys and/or key=value elements.
                                                          properties:
                                                            name:
                                                              description: Specifies the name of a key that must be present in the requested *path*'s query string.
                                                              type: string
                                                            regex:
                                                              description: Specifies whether the query parameter value is a regular expression. Defaults to false. The entire query parameter value (i.e., the part to the right of the equals sign in "key=value") must match the regex. E.g., the regex "\d+$" will match "123" but not "a123" or "123a".
                                                              type: boolean
                                                            value:
                                                              description: Specifies the value of the key. If the value is absent, a request that contains the key in its query string will match, whether the key appears with a value (e.g., "?debug=true") or not (e.g., "?debug")
                                                              type: string
                                                          type: object
                                                        type: array
                                                      regex:
                                                        description: If specified, the route is a regular expression rule meaning that the regex must match the *:path* header once the query string is removed. The entire path (without the query string) must match the regex. The rule will not match if only a sub-sequence of the *:path* header matches the regex. The regex grammar is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                                                        type: string
                                                    type: object
                                                  request_transformation:
                                                    description: Transformation to apply on the request.
                                                    properties:
                                                      header_body_transform:
                                                        description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                                        type: object
                                                      transformation_template:
                                                        description: Apply transformation templates.
                                                        properties:
                                                          advanced_templates:
                                                            description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                            type: boolean
                                                          body:
                                                            description: Apply a template to the body
                                                            properties:
                                                              text:
                                                                type: string
                                                            type: object
                                                          dynamic_metadata_values:
                                                            description: Use this field to set Dynamic Metadata.
                                                            items:
                                                              description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                              properties:
                                                                key:
                                                                  description: The metadata key.
                                                                  type: string
                                                                metadata_namespace:
                                                                  description: The metadata namespace. Defaults to the filter namespace.
                                                                  type: string
                                                                value:
                                                                  description: A template that determines the metadata value.
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          extractors:
                                                            additionalProperties:
                                                              properties:
                                                                body:
                                                                  description: Extract information from the request/response body
                                                                  type: object
                                                                header:
                                                                  description: Extract information from headers
                                                                  type: string
                                                                regex:
                                                                  description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                                  type: string
                                                                subgroup:
                                                                  description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                                  format: int32
                                                                  type: integer
                                                              type: object
                                                            description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                            type: object
                                                          headers:
                                                            additionalProperties:
                                                              properties:
                                                                text:
                                                                  type: string
                                                              type: object
                                                            description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                            type: object
                                                          headers_to_append:
                                                            description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                            items:
                                                              description: Defines a header-template pair to be used in `headers_to_append`
                                                              properties:
                                                                key:
                                                                  description: Header name
                                                                  type: string
                                                                value:
                                                                  description: Apply a template to the header value
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          ignore_error_on_parse:
                                                            description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                            type: boolean
                                                          merge_extractors_to_body:
                                                            description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                            type: object
                                                          parse_body_behavior:
                                                            enum:
                                                            - - ParseAsJson
                                                              - DontParse
                                                            type: string
                                                          passthrough:
                                                            description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                            type: object
                                                        type: object
                                                      xslt_transformation:
                                                        description: '(Enterprise Only): Xslt Transformation'
                                                        properties:
                                                          non_xml_transform:
                                                            description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                                            type: boolean
                                                          set_content_type:
                                                            description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                                            type: string
                                                          xslt:
                                                            description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                                            type: string
                                                        type: object
                                                    type: object
                                                  response_transformation:
                                                    description: Transformation to apply on the response.
                                                    properties:
                                                      header_body_transform:
                                                        description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                                        type: object
                                                      transformation_template:
                                                        description: Apply transformation templates.
                                                        properties:
                                                          advanced_templates:
                                                            description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                            type: boolean
                                                          body:
                                                            description: Apply a template to the body
                                                            properties:
                                                              text:
                                                                type: string
                                                            type: object
                                                          dynamic_metadata_values:
                                                            description: Use this field to set Dynamic Metadata.
                                                            items:
                                                              description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                              properties:
                                                                key:
                                                                  description: The metadata key.
                                                                  type: string
                                                                metadata_namespace:
                                                                  description: The metadata namespace. Defaults to the filter namespace.
                                                                  type: string
                                                                value:
                                                                  description: A template that determines the metadata value.
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          extractors:
                                                            additionalProperties:
                                                              properties:
                                                                body:
                                                                  description: Extract information from the request/response body
                                                                  type: object
                                                                header:
                                                                  description: Extract information from headers
                                                                  type: string
                                                                regex:
                                                                  description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                                  type: string
                                                                subgroup:
                                                                  description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                                  format: int32
                                                                  type: integer
                                                              type: object
                                                            description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                            type: object
                                                          headers:
                                                            additionalProperties:
                                                              properties:
                                                                text:
                                                                  type: string
                                                              type: object
                                                            description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                            type: object
                                                          headers_to_append:
                                                            description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                            items:
                                                              description: Defines a header-template pair to be used in `headers_to_append`
                                                              properties:
                                                                key:
                                                                  description: Header name
                                                                  type: string
                                                                value:
                                                                  description: Apply a template to the header value
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          ignore_error_on_parse:
                                                            description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                            type: boolean
                                                          merge_extractors_to_body:
                                                            description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                            type: object
                                                          parse_body_behavior:
                                                            enum:
                                                            - - ParseAsJson
                                                              - DontParse
                                                            type: string
                                                          passthrough:
                                                            description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                            type: object
                                                        type: object
                                                      xslt_transformation:
                                                        description: '(Enterprise Only): Xslt Transformation'
                                                        properties:
                                                          non_xml_transform:
                                                            description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                                            type: boolean
                                                          set_content_type:
                                                            description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                                            type: string
                                                          xslt:
                                                            description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                                            type: string
                                                        type: object
                                                    type: object
                                                type: object
                                              type: array
                                            response_transforms:
                                              description: Transformations to apply on the response. This field is only consulted if there is no response transformation in the matched `request_transforms`. i.e. Only one response transformation will be executed. The first response transformation that matches will apply.
                                              items:
                                                properties:
                                                  matchers:
                                                    description: Response headers to match on.
                                                    items:
                                                      description: Internally, Gloo always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.
                                                      properties:
                                                        invert_match:
                                                          description: If set to true, the result of the match will be inverted. Defaults to false.
                                                          type: boolean
                                                        name:
                                                          description: Specifies the name of the header in the request.
                                                          type: string
                                                        regex:
                                                          description: Specifies whether the header value should be treated as regex or not.
                                                          type: boolean
                                                        value:
                                                          description: Specifies the value of the header. If the value is absent a request that has the name header will match, regardless of the header’s value.
                                                          type: string
                                                      type: object
                                                    type: array
                                                  response_code_details:
                                                    description: Response code detail to match on. To see the response code details for your usecase, you can use the envoy access log %RESPONSE_CODE_DETAILS% formatter to log it.
                                                    type: string
                                                  response_transformation:
                                                    description: Transformation to apply on the response.
                                                    properties:
                                                      header_body_transform:
                                                        description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                                        type: object
                                                      transformation_template:
                                                        description: Apply transformation templates.
                                                        properties:
                                                          advanced_templates:
                                                            description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                            type: boolean
                                                          body:
                                                            description: Apply a template to the body
                                                            properties:
                                                              text:
                                                                type: string
                                                            type: object
                                                          dynamic_metadata_values:
                                                            description: Use this field to set Dynamic Metadata.
                                                            items:
                                                              description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                              properties:
                                                                key:
                                                                  description: The metadata key.
                                                                  type: string
                                                                metadata_namespace:
                                                                  description: The metadata namespace. Defaults to the filter namespace.
                                                                  type: string
                                                                value:
                                                                  description: A template that determines the metadata value.
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          extractors:
                                                            additionalProperties:
                                                              properties:
                                                                body:
                                                                  description: Extract information from the request/response body
                                                                  type: object
                                                                header:
                                                                  description: Extract information from headers
                                                                  type: string
                                                                regex:
                                                                  description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                                  type: string
                                                                subgroup:
                                                                  description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                                  format: int32
                                                                  type: integer
                                                              type: object
                                                            description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                            type: object
                                                          headers:
                                                            additionalProperties:
                                                              properties:
                                                                text:
                                                                  type: string
                                                              type: object
                                                            description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                            type: object
                                                          headers_to_append:
                                                            description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                            items:
                                                              description: Defines a header-template pair to be used in `headers_to_append`
                                                              properties:
                                                                key:
                                                                  description: Header name
                                                                  type: string
                                                                value:
                                                                  description: Apply a template to the header value
                                                                  properties:
                                                                    text:
                                                                      type: string
                                                                  type: object
                                                              type: object
                                                            type: array
                                                          ignore_error_on_parse:
                                                            description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                            type: boolean
                                                          merge_extractors_to_body:
                                                            description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                            type: object
                                                          parse_body_behavior:
                                                            enum:
                                                            - - ParseAsJson
                                                              - DontParse
                                                            type: string
                                                          passthrough:
                                                            description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                            type: object
                                                        type: object
                                                      xslt_transformation:
                                                        description: '(Enterprise Only): Xslt Transformation'
                                                        properties:
                                                          non_xml_transform:
                                                            description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                                            type: boolean
                                                          set_content_type:
                                                            description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                                            type: string
                                                          xslt:
                                                            description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                                            type: string
                                                        type: object
                                                    type: object
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    transformations:
                                      description: 'Transformations to apply. Note: this field is superseded by `staged_transformations`. If `staged_transformations.regular` is set, this field will be ignored.'
                                      properties:
                                        clear_route_cache:
                                          description: Clear the route cache if the request transformation was applied.
                                          type: boolean
                                        request_transformation:
                                          description: Apply a transformation to requests.
                                          properties:
                                            header_body_transform:
                                              description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                              type: object
                                            transformation_template:
                                              description: Apply transformation templates.
                                              properties:
                                                advanced_templates:
                                                  description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                  type: boolean
                                                body:
                                                  description: Apply a template to the body
                                                  properties:
                                                    text:
                                                      type: string
                                                  type: object
                                                dynamic_metadata_values:
                                                  description: Use this field to set Dynamic Metadata.
                                                  items:
                                                    description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                    properties:
                                                      key:
                                                        description: The metadata key.
                                                        type: string
                                                      metadata_namespace:
                                                        description: The metadata namespace. Defaults to the filter namespace.
                                                        type: string
                                                      value:
                                                        description: A template that determines the metadata value.
                                                        properties:
                                                          text:
                                                            type: string
                                                        type: object
                                                    type: object
                                                  type: array
                                                extractors:
                                                  additionalProperties:
                                                    properties:
                                                      body:
                                                        description: Extract information from the request/response body
                                                        type: object
                                                      header:
                                                        description: Extract information from headers
                                                        type: string
                                                      regex:
                                                        description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                        type: string
                                                      subgroup:
                                                        description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                  description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                  type: object
                                                headers:
                                                  additionalProperties:
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                  description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                  type: object
                                                headers_to_append:
                                                  description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                  items:
                                                    description: Defines a header-template pair to be used in `headers_to_append`
                                                    properties:
                                                      key:
                                                        description: Header name
                                                        type: string
                                                      value:
                                                        description: Apply a template to the header value
                                                        properties:
                                                          text:
                                                            type: string
                                                        type: object
                                                    type: object
                                                  type: array
                                                ignore_error_on_parse:
                                                  description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                  type: boolean
                                                merge_extractors_to_body:
                                                  description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                  type: object
                                                parse_body_behavior:
                                                  enum:
                                                  - - ParseAsJson
                                                    - DontParse
                                                  type: string
                                                passthrough:
                                                  description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                  type: object
                                              type: object
                                            xslt_transformation:
                                              description: '(Enterprise Only): Xslt Transformation'
                                              properties:
                                                non_xml_transform:
                                                  description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                                  type: boolean
                                                set_content_type:
                                                  description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                                  type: string
                                                xslt:
                                                  description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                                  type: string
                                              type: object
                                          type: object
                                        response_transformation:
                                          description: Apply a transformation to responses.
                                          properties:
                                            header_body_transform:
                                              description: 'This type of transformation will make all the headers available in the response body. The resulting JSON body will consist of two attributes: ''headers'', containing the headers, and ''body'', containing the original body.'
                                              type: object
                                            transformation_template:
                                              description: Apply transformation templates.
                                              properties:
                                                advanced_templates:
                                                  description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                                  type: boolean
                                                body:
                                                  description: Apply a template to the body
                                                  properties:
                                                    text:
                                                      type: string
                                                  type: object
                                                dynamic_metadata_values:
                                                  description: Use this field to set Dynamic Metadata.
                                                  items:
                                                    description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                                    properties:
                                                      key:
                                                        description: The metadata key.
                                                        type: string
                                                      metadata_namespace:
                                                        description: The metadata namespace. Defaults to the filter namespace.
                                                        type: string
                                                      value:
                                                        description: A template that determines the metadata value.
                                                        properties:
                                                          text:
                                                            type: string
                                                        type: object
                                                    type: object
                                                  type: array
                                                extractors:
                                                  additionalProperties:
                                                    properties:
                                                      body:
                                                        description: Extract information from the request/response body
                                                        type: object
                                                      header:
                                                        description: Extract information from headers
                                                        type: string
                                                      regex:
                                                        description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                                        type: string
                                                      subgroup:
                                                        description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                                        format: int32
                                                        type: integer
                                                    type: object
                                                  description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                                  type: object
                                                headers:
                                                  additionalProperties:
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                  description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                                  type: object
                                                headers_to_append:
                                                  description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                                  items:
                                                    description: Defines a header-template pair to be used in `headers_to_append`
                                                    properties:
                                                      key:
                                                        description: Header name
                                                        type: string
                                                      value:
                                                        description: Apply a template to the header value
                                                        properties:
                                                          text:
                                                            type: string
                                                        type: object
                                                    type: object
                                                  type: array
                                                ignore_error_on_parse:
                                                  description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                                  type: boolean
                                                merge_extractors_to_body:
                                                  description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                                  type: object
                                                parse_body_behavior:
                                                  enum:
                                                  - - ParseAsJson
                                                    - DontParse
                                                  type: string
                                                passthrough:
                                                  description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                                  type: object
                                              type: object
                                            xslt_transformation:
                                              description: '(Enterprise Only): Xslt Transformation'
                                              properties:
                                                non_xml_transform:
                                                  description: This should be set to true if the content being transformed is not XML. For example, if the content being transformed is from JSON to XML, this should be set to true. XSLT transformations can only take valid XML as input to be transformed. If the body is not a valid XML (e.g. using JSON as input in a JSON-to-XML transformation), setting `non_xml_transform` to true will allow the XSLT to accept the non-XML input without throwing an error by passing the input as XML CDATA. defaults to false.
                                                  type: boolean
                                                set_content_type:
                                                  description: Changes the content-type header of the HTTP request/response to what is set here. This is useful in situations where an XSLT transformation is used to transform XML to JSON and the content-type should be changed from `application/xml` to `application/json`. If left empty, the content-type header remains unmodified by default.
                                                  type: string
                                                xslt:
                                                  description: XSLT transformation template which you want to transform requests/responses with. Invalid XSLT transformation templates will result will result in a NACK during envoy configuration-time and the configuration will not be loaded.
                                                  type: string
                                              type: object
                                          type: object
                                      type: object
                                  type: object
                                weight:
                                  description: Weight must be greater than zero Routing to each destination will be balanced by the ratio of the destination's weight to the total weight on a route
                                  format: int32
                                  type: integer
                              type: object
                            type: array
                        type: object
                      single:
                        description: Use SingleDestination to route to a single upstream
                        properties:
                          consul:
                            description: Route requests to a consul service
                            properties:
                              data_centers:
                                description: If provided, load balance traffic only between services running in the given [data centers](https://www.consul.io/docs/internals/architecture.html).
                                items:
                                  type: string
                                type: array
                              service_name:
                                description: The name of the target service. This field is required.
                                type: string
                              tags:
                                description: If provided, load balance traffic only between services matching all the given tags.
                                items:
                                  type: string
                                type: array
                            type: object
                          destination_spec:
                            description: Some upstreams utilize options which require or permit additional configuration on routes targeting them. gRPC upstreams, for example, allow specifying REST-style parameters for JSON-to-gRPC transcoding in the destination config. If the destination config is required for the upstream and not provided by the user, Gloo will invalidate the destination and its parent resources.
                            properties:
                              aws:
                                properties:
                                  invocation_style:
                                    description: Can be either Sync or Async.
                                    enum:
                                    - - SYNC
                                      - ASYNC
                                    type: string
                                  logical_name:
                                    description: The Logical Name of the LambdaFunctionSpec to be invoked.
                                    type: string
                                  response_transformation:
                                    description: de-jsonify response bodies returned from aws lambda
                                    type: boolean
                                type: object
                              azure:
                                properties:
                                  function_name:
                                    description: The Function Name of the FunctionSpec to be invoked.
                                    type: string
                                type: object
                              grpc:
                                properties:
                                  function:
                                    description: The name of the function.
                                    type: string
                                  package:
                                    description: The proto package of the function.
                                    type: string
                                  parameters:
                                    description: Parameters describe how to extract the function parameters from the request.
                                    properties:
                                      headers:
                                        additionalProperties:
                                          type: string
                                        description: 'headers that will be used to extract data for processing output templates Gloo will search for parameters by their name in header value strings, enclosed in single curly braces Example: extensions: parameters: headers: x-user-id: ''{userId}'''
                                        type: object
                                      path:
                                        description: 'part of the (or the entire) path that will be used extract data for processing output templates Gloo will search for parameters by their name in header value strings, enclosed in single curly braces Example: extensions: parameters: path: /users/{ userId }'
                                        properties:
                                          value:
                                            description: The string value.
                                            type: string
                                        type: object
                                    type: object
                                  service:
                                    description: The name of the service of the function.
                                    type: string
                                type: object
                              rest:
                                properties:
                                  function_name:
                                    type: string
                                  parameters:
                                    properties:
                                      headers:
                                        additionalProperties:
                                          type: string
                                        description: 'headers that will be used to extract data for processing output templates Gloo will search for parameters by their name in header value strings, enclosed in single curly braces Example: extensions: parameters: headers: x-user-id: ''{userId}'''
                                        type: object
                                      path:
                                        description: 'part of the (or the entire) path that will be used extract data for processing output templates Gloo will search for parameters by their name in header value strings, enclosed in single curly braces Example: extensions: parameters: path: /users/{ userId }'
                                        properties:
                                          value:
                                            description: The string value.
                                            type: string
                                        type: object
                                    type: object
                                  response_transformation:
                                    properties:
                                      advanced_templates:
                                        description: If set to true, use JSON pointer notation (e.g. "time/start") instead of dot notation (e.g. "time.start") to access JSON elements. Defaults to false.
                                        type: boolean
                                      body:
                                        description: Apply a template to the body
                                        properties:
                                          text:
                                            type: string
                                        type: object
                                      dynamic_metadata_values:
                                        description: Use this field to set Dynamic Metadata.
                                        items:
                                          description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata) entry.
                                          properties:
                                            key:
                                              description: The metadata key.
                                              type: string
                                            metadata_namespace:
                                              description: The metadata namespace. Defaults to the filter namespace.
                                              type: string
                                            value:
                                              description: A template that determines the metadata value.
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      extractors:
                                        additionalProperties:
                                          properties:
                                            body:
                                              description: Extract information from the request/response body
                                              type: object
                                            header:
                                              description: Extract information from headers
                                              type: string
                                            regex:
                                              description: Only strings matching this regular expression will be part of the extraction. The most simple value for this field is '.*', which matches the whole source. The field is required. If extraction fails the result is an empty value.
                                              type: string
                                            subgroup:
                                              description: If your regex contains capturing groups, use this field to determine which group should be selected.
                                              format: int32
                                              type: integer
                                          type: object
                                        description: Use this attribute to extract information from the request. It consists of a map of strings to extractors. The extractor will defines which information will be extracted, while the string key will provide the extractor with a name. You can reference extractors by their name in templates, e.g. "{{ my-extractor }}" will render to the value of the "my-extractor" extractor.
                                        type: object
                                      headers:
                                        additionalProperties:
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                        description: 'Use this attribute to transform request/response headers. It consists of a map of strings to templates. The string key determines the name of the resulting header, the rendered template will determine the value. Any existing headers with the same header name will be replaced by the transformed header. If a header name is included in `headers` and `headers_to_append`, it will first be replaced the template in `headers`, then additional header values will be appended by the templates defined in `headers_to_append`. For example, the following header transformation configuration:'
                                        type: object
                                      headers_to_append:
                                        description: Use this attribute to transform request/response headers. It consists of an array of string/template objects. Use this attribute to define multiple templates for a single header. Header template(s) defined here will be appended to any existing headers with the same header name, not replace existing ones. See `headers` documentation to see an example of usage.
                                        items:
                                          description: Defines a header-template pair to be used in `headers_to_append`
                                          properties:
                                            key:
                                              description: Header name
                                              type: string
                                            value:
                                              description: Apply a template to the header value
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      ignore_error_on_parse:
                                        description: If set to true, Envoy will not throw an exception in case the body parsing fails.
                                        type: boolean
                                      merge_extractors_to_body:
                                        description: Merge all defined extractors to the request/response body. If you want to nest elements inside the body, use dot separator in the extractor name.
                                        type: object
                                      parse_body_behavior:
                                        enum:
                                        - - ParseAsJson
                                          - DontParse
                                        type: string
                                      passthrough:
                                        description: This will cause the transformation filter not to buffer the body. Use this setting if the response body is large and you don't need to transform nor extract information from it.
                                        type: object
                                    type: object
                                type: object
                            type: object
                          kube:
                            description: Route requests to a kubernetes service
                            properties:
                              port:
                                description: The port attribute of the service
                                format: int32
                                type: integer
                              ref:
                                description: The target service
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          subset:
                            description: If specified, traffic will only be routed to a subset of the upstream. If upstream doesn't contain the specified subset, we will fallback to normal upstream routing.
                            properties:
                              values:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          upstream:
                            description: Route requests to a Gloo upstream
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                        type: object
                      upstream_group:
                        description: Use a reference to an upstream group for routing.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                    type: object
                type: object
              type: array
            status:
              description: Status indicates the validation status of this resource. Status is read-only by clients, and set by gloo during validation
              type: object
              x-kubernetes-preserve-unknown-fields: true
            weight:
              description: When a delegated route defines a `RouteTableSelector` that matches multiple route tables, Gloo will inspect this field to determine the order in which the route tables are to be evaluated. This determines the order in which the routes will appear on the final `Proxy` resource. The field is optional; if no value is specified, the weight defaults to 0 (zero).
              properties:
                value:
                  description: The int32 value.
                  format: int32
                  type: integer
              type: object
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
